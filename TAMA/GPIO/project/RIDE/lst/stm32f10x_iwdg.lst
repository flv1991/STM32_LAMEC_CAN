
C:\Users\fv\Desktop\TAMA\GPIO\project\RIDE\obj\stm32f10x_iwdg.o:     file format elf32-littlearm
C:\Users\fv\Desktop\TAMA\GPIO\project\RIDE\obj\stm32f10x_iwdg.o


Disassembly of section .text.IWDG_WriteAccessCmd:

00000000 <IWDG_WriteAccessCmd>:
IWDG_WriteAccessCmd():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:50
void IWDG_WriteAccessCmd(u16 IWDG_WriteAccess)
{
  /* Check the parameters */
  assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));

  IWDG->KR = IWDG_WriteAccess;
   0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	6018      	str	r0, [r3, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:51
}
   a:	4770      	bx	lr

Disassembly of section .text.IWDG_SetPrescaler:

00000000 <IWDG_SetPrescaler>:
IWDG_SetPrescaler():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:73
void IWDG_SetPrescaler(u8 IWDG_Prescaler)
{
  /* Check the parameters */
  assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));

  IWDG->PR = IWDG_Prescaler;
   0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	6058      	str	r0, [r3, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:74
}
   a:	4770      	bx	lr

Disassembly of section .text.IWDG_SetReload:

00000000 <IWDG_SetReload>:
IWDG_SetReload():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:89
void IWDG_SetReload(u16 Reload)
{
  /* Check the parameters */
  assert_param(IS_IWDG_RELOAD(Reload));

  IWDG->RLR = Reload;
   0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	6098      	str	r0, [r3, #8]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:90
}
   a:	4770      	bx	lr

Disassembly of section .text.IWDG_ReloadCounter:

00000000 <IWDG_ReloadCounter>:
IWDG_ReloadCounter():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:102
* Output         : None
* Return         : None
*******************************************************************************/
void IWDG_ReloadCounter(void)
{
  IWDG->KR = KR_KEY_Reload;
   0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   c:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:103
}
   e:	4770      	bx	lr

Disassembly of section .text.IWDG_Enable:

00000000 <IWDG_Enable>:
IWDG_Enable():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:115
* Output         : None
* Return         : None
*******************************************************************************/
void IWDG_Enable(void)
{
  IWDG->KR = KR_KEY_Enable;
   0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	f64c 42cc 	movw	r2, #52428	; 0xcccc
   c:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:116
}
   e:	4770      	bx	lr

Disassembly of section .text.IWDG_GetFlagStatus:

00000000 <IWDG_GetFlagStatus>:
IWDG_GetFlagStatus():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:135
  FlagStatus bitstatus = RESET;

  /* Check the parameters */
  assert_param(IS_IWDG_FLAG(IWDG_FLAG));

  if ((IWDG->SR & IWDG_FLAG) != (u32)RESET)
   0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	68db      	ldr	r3, [r3, #12]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:137
  {
    bitstatus = SET;
   a:	4218      	tst	r0, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_iwdg.c:146
    bitstatus = RESET;
  }

  /* Return the flag status */
  return bitstatus;
}
   c:	bf0c      	ite	eq
   e:	2000      	moveq	r0, #0
  10:	2001      	movne	r0, #1
  12:	4770      	bx	lr
