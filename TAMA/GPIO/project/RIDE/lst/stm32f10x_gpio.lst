
C:\Users\fv\Desktop\TAMA\GPIO\project\RIDE\obj\stm32f10x_gpio.o:     file format elf32-littlearm
C:\Users\fv\Desktop\TAMA\GPIO\project\RIDE\obj\stm32f10x_gpio.o


Disassembly of section .text.GPIO_DeInit:

00000000 <GPIO_DeInit>:
GPIO_DeInit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:52
* Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_DeInit(GPIO_TypeDef* GPIOx)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:56
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  
  switch (*(u32*)&GPIOx)
   2:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
   6:	f2c4 0301 	movt	r3, #16385	; 0x4001
   a:	4298      	cmp	r0, r3
   c:	d052      	beq.n	b4 <GPIO_DeInit+0xb4>
   e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
  12:	f2c4 0301 	movt	r3, #16385	; 0x4001
  16:	4298      	cmp	r0, r3
  18:	d812      	bhi.n	40 <GPIO_DeInit+0x40>
  1a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
  1e:	f2c4 0301 	movt	r3, #16385	; 0x4001
  22:	4298      	cmp	r0, r3
  24:	d02c      	beq.n	80 <GPIO_DeInit+0x80>
  26:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  2a:	f2c4 0301 	movt	r3, #16385	; 0x4001
  2e:	4298      	cmp	r0, r3
  30:	d033      	beq.n	9a <GPIO_DeInit+0x9a>
  32:	f44f 6300 	mov.w	r3, #2048	; 0x800
  36:	f2c4 0301 	movt	r3, #16385	; 0x4001
  3a:	4298      	cmp	r0, r3
  3c:	d16d      	bne.n	11a <GPIO_DeInit+0x11a>
  3e:	e012      	b.n	66 <GPIO_DeInit+0x66>
  40:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
  44:	f2c4 0301 	movt	r3, #16385	; 0x4001
  48:	4298      	cmp	r0, r3
  4a:	d04d      	beq.n	e8 <GPIO_DeInit+0xe8>
  4c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  50:	f2c4 0301 	movt	r3, #16385	; 0x4001
  54:	4298      	cmp	r0, r3
  56:	d054      	beq.n	102 <GPIO_DeInit+0x102>
  58:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
  5c:	f2c4 0301 	movt	r3, #16385	; 0x4001
  60:	4298      	cmp	r0, r3
  62:	d15a      	bne.n	11a <GPIO_DeInit+0x11a>
  64:	e033      	b.n	ce <GPIO_DeInit+0xce>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:59
  {
    case GPIOA_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, ENABLE);
  66:	f04f 0004 	mov.w	r0, #4
  6a:	f04f 0101 	mov.w	r1, #1
  6e:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:60
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, DISABLE);
  72:	f04f 0004 	mov.w	r0, #4
  76:	f04f 0100 	mov.w	r1, #0
  7a:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:61
      break;
  7e:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:64

    case GPIOB_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, ENABLE);
  80:	f04f 0008 	mov.w	r0, #8
  84:	f04f 0101 	mov.w	r1, #1
  88:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:65
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, DISABLE);
  8c:	f04f 0008 	mov.w	r0, #8
  90:	f04f 0100 	mov.w	r1, #0
  94:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:66
      break;
  98:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:69

    case GPIOC_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, ENABLE);
  9a:	f04f 0010 	mov.w	r0, #16
  9e:	f04f 0101 	mov.w	r1, #1
  a2:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:70
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, DISABLE);
  a6:	f04f 0010 	mov.w	r0, #16
  aa:	f04f 0100 	mov.w	r1, #0
  ae:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:71
      break;
  b2:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:74

    case GPIOD_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, ENABLE);
  b4:	f04f 0020 	mov.w	r0, #32
  b8:	f04f 0101 	mov.w	r1, #1
  bc:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:75
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, DISABLE);
  c0:	f04f 0020 	mov.w	r0, #32
  c4:	f04f 0100 	mov.w	r1, #0
  c8:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:76
      break;
  cc:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:79
      
    case GPIOE_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, ENABLE);
  ce:	f04f 0040 	mov.w	r0, #64	; 0x40
  d2:	f04f 0101 	mov.w	r1, #1
  d6:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:80
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, DISABLE);
  da:	f04f 0040 	mov.w	r0, #64	; 0x40
  de:	f04f 0100 	mov.w	r1, #0
  e2:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:81
      break; 
  e6:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:84

    case GPIOF_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, ENABLE);
  e8:	f04f 0080 	mov.w	r0, #128	; 0x80
  ec:	f04f 0101 	mov.w	r1, #1
  f0:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:85
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, DISABLE);
  f4:	f04f 0080 	mov.w	r0, #128	; 0x80
  f8:	f04f 0100 	mov.w	r1, #0
  fc:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:86
      break;
 100:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:89

    case GPIOG_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, ENABLE);
 102:	f44f 7080 	mov.w	r0, #256	; 0x100
 106:	f04f 0101 	mov.w	r1, #1
 10a:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:90
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, DISABLE);
 10e:	f44f 7080 	mov.w	r0, #256	; 0x100
 112:	f04f 0100 	mov.w	r1, #0
 116:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
 11a:	bd08      	pop	{r3, pc}

Disassembly of section .text.GPIO_AFIODeInit:

00000000 <GPIO_AFIODeInit>:
GPIO_AFIODeInit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:108
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_AFIODeInit(void)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:109
  RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, ENABLE);
   2:	f04f 0001 	mov.w	r0, #1
   6:	4601      	mov	r1, r0
   8:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:110
  RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, DISABLE);
   c:	f04f 0001 	mov.w	r0, #1
  10:	f04f 0100 	mov.w	r1, #0
  14:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:111
}
  18:	bd08      	pop	{r3, pc}
  1a:	bf00      	nop

Disassembly of section .text.GPIO_Init:

00000000 <GPIO_Init>:
GPIO_Init():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:125
*                    peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
   0:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:135
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x0F);
   4:	78cb      	ldrb	r3, [r1, #3]
   6:	f003 050f 	and.w	r5, r3, #15
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:137

  if ((((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x10)) != 0x00)
   a:	f013 0f10 	tst.w	r3, #16
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:142
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
    /* Output mode */
    currentmode |= (u32)GPIO_InitStruct->GPIO_Speed;
   e:	bf1c      	itt	ne
  10:	788b      	ldrbne	r3, [r1, #2]
  12:	431d      	orrne	r5, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:147
  }

/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
  14:	780b      	ldrb	r3, [r1, #0]
  16:	b333      	cbz	r3, 66 <GPIO_Init+0x66>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:149
  {
    tmpreg = GPIOx->CRL;
  18:	f8d0 c000 	ldr.w	ip, [r0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:151

    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
  1c:	f04f 0300 	mov.w	r3, #0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:153
    {
      pos = ((u32)0x01) << pinpos;
  20:	f04f 0601 	mov.w	r6, #1
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:161

      if (currentpin == pos)
      {
        pos = pinpos << 2;
        /* Clear the corresponding low control register bits */
        pinmask = ((u32)0x0F) << pos;
  24:	f04f 080f 	mov.w	r8, #15
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:153
  {
    tmpreg = GPIOx->CRL;

    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
    {
      pos = ((u32)0x01) << pinpos;
  28:	fa06 f203 	lsl.w	r2, r6, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:155
      /* Get the port pins position */
      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
  2c:	880c      	ldrh	r4, [r1, #0]
  2e:	ea02 0404 	and.w	r4, r2, r4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:157

      if (currentpin == pos)
  32:	4294      	cmp	r4, r2
  34:	d111      	bne.n	5a <GPIO_Init+0x5a>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:159
      {
        pos = pinpos << 2;
  36:	ea4f 0783 	mov.w	r7, r3, lsl #2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:161
        /* Clear the corresponding low control register bits */
        pinmask = ((u32)0x0F) << pos;
  3a:	fa08 f907 	lsl.w	r9, r8, r7
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:162
        tmpreg &= ~pinmask;
  3e:	ea2c 0c09 	bic.w	ip, ip, r9
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:165

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
  42:	fa05 f707 	lsl.w	r7, r5, r7
  46:	ea4c 0c07 	orr.w	ip, ip, r7
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:168

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
  4a:	78cf      	ldrb	r7, [r1, #3]
  4c:	2f28      	cmp	r7, #40	; 0x28
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:170
        {
          GPIOx->BRR = (((u32)0x01) << pinpos);
  4e:	bf08      	it	eq
  50:	6144      	streq	r4, [r0, #20]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:168

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
  52:	d002      	beq.n	5a <GPIO_Init+0x5a>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:175
          GPIOx->BRR = (((u32)0x01) << pinpos);
        }
        else
        {
          /* Set the corresponding ODR bit */
          if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
  54:	2f48      	cmp	r7, #72	; 0x48
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:177
          {
            GPIOx->BSRR = (((u32)0x01) << pinpos);
  56:	bf08      	it	eq
  58:	6102      	streq	r2, [r0, #16]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:151
  /* Configure the eight low port pins */
  if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
  {
    tmpreg = GPIOx->CRL;

    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
  5a:	f103 0301 	add.w	r3, r3, #1
  5e:	2b08      	cmp	r3, #8
  60:	d1e2      	bne.n	28 <GPIO_Init+0x28>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:182
            GPIOx->BSRR = (((u32)0x01) << pinpos);
          }
        }
      }
    }
    GPIOx->CRL = tmpreg;
  62:	f8c0 c000 	str.w	ip, [r0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:187
  }

/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
  66:	880b      	ldrh	r3, [r1, #0]
  68:	2bff      	cmp	r3, #255	; 0xff
  6a:	d928      	bls.n	be <GPIO_Init+0xbe>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:189
  {
    tmpreg = GPIOx->CRH;
  6c:	f8d0 c004 	ldr.w	ip, [r0, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:190
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
  70:	f04f 0300 	mov.w	r3, #0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:192
    {
      pos = (((u32)0x01) << (pinpos + 0x08));
  74:	f04f 0601 	mov.w	r6, #1
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:199
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
      if (currentpin == pos)
      {
        pos = pinpos << 2;
        /* Clear the corresponding high control register bits */
        pinmask = ((u32)0x0F) << pos;
  78:	f04f 080f 	mov.w	r8, #15
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:124
*                    contains the configuration information for the specified GPIO
*                    peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
  7c:	f103 0208 	add.w	r2, r3, #8
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:192
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
  {
    tmpreg = GPIOx->CRH;
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
    {
      pos = (((u32)0x01) << (pinpos + 0x08));
  80:	fa06 f202 	lsl.w	r2, r6, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:194
      /* Get the port pins position */
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
  84:	880c      	ldrh	r4, [r1, #0]
  86:	ea02 0404 	and.w	r4, r2, r4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:195
      if (currentpin == pos)
  8a:	4294      	cmp	r4, r2
  8c:	d111      	bne.n	b2 <GPIO_Init+0xb2>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:197
      {
        pos = pinpos << 2;
  8e:	ea4f 0783 	mov.w	r7, r3, lsl #2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:199
        /* Clear the corresponding high control register bits */
        pinmask = ((u32)0x0F) << pos;
  92:	fa08 f907 	lsl.w	r9, r8, r7
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:200
        tmpreg &= ~pinmask;
  96:	ea2c 0c09 	bic.w	ip, ip, r9
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:203

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
  9a:	fa05 f707 	lsl.w	r7, r5, r7
  9e:	ea4c 0c07 	orr.w	ip, ip, r7
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:206

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
  a2:	78cf      	ldrb	r7, [r1, #3]
  a4:	2f28      	cmp	r7, #40	; 0x28
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:208
        {
          GPIOx->BRR = (((u32)0x01) << (pinpos + 0x08));
  a6:	bf08      	it	eq
  a8:	6144      	streq	r4, [r0, #20]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:211
        }
        /* Set the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
  aa:	78cc      	ldrb	r4, [r1, #3]
  ac:	2c48      	cmp	r4, #72	; 0x48
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:213
        {
          GPIOx->BSRR = (((u32)0x01) << (pinpos + 0x08));
  ae:	bf08      	it	eq
  b0:	6102      	streq	r2, [r0, #16]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:190
/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
  {
    tmpreg = GPIOx->CRH;
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
  b2:	f103 0301 	add.w	r3, r3, #1
  b6:	2b08      	cmp	r3, #8
  b8:	d1e0      	bne.n	7c <GPIO_Init+0x7c>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:217
        {
          GPIOx->BSRR = (((u32)0x01) << (pinpos + 0x08));
        }
      }
    }
    GPIOx->CRH = tmpreg;
  ba:	f8c0 c004 	str.w	ip, [r0, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:219
  }
}
  be:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
  c2:	4770      	bx	lr

Disassembly of section .text.GPIO_StructInit:

00000000 <GPIO_StructInit>:
GPIO_StructInit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:232
* Return         : None
*******************************************************************************/
void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
{
  /* Reset GPIO init structure parameters values */
  GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
   0:	f04f 33ff 	mov.w	r3, #4294967295
   4:	8003      	strh	r3, [r0, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:233
  GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
   6:	f04f 0302 	mov.w	r3, #2
   a:	7083      	strb	r3, [r0, #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:234
  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN_FLOATING;
   c:	f04f 0304 	mov.w	r3, #4
  10:	70c3      	strb	r3, [r0, #3]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:235
}
  12:	4770      	bx	lr

Disassembly of section .text.GPIO_ReadInputDataBit:

00000000 <GPIO_ReadInputDataBit>:
GPIO_ReadInputDataBit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:254
  
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
  
  if ((GPIOx->IDR & GPIO_Pin) != (u32)Bit_RESET)
   0:	6883      	ldr	r3, [r0, #8]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:256
  {
    bitstatus = (u8)Bit_SET;
   2:	4219      	tst	r1, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:263
  else
  {
    bitstatus = (u8)Bit_RESET;
  }
  return bitstatus;
}
   4:	bf0c      	ite	eq
   6:	2000      	moveq	r0, #0
   8:	2001      	movne	r0, #1
   a:	4770      	bx	lr

Disassembly of section .text.GPIO_ReadInputData:

00000000 <GPIO_ReadInputData>:
GPIO_ReadInputData():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:277
u16 GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  
  return ((u16)GPIOx->IDR);
   0:	6880      	ldr	r0, [r0, #8]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:278
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr
   6:	bf00      	nop

Disassembly of section .text.GPIO_ReadOutputDataBit:

00000000 <GPIO_ReadOutputDataBit>:
GPIO_ReadOutputDataBit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:297

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
  
  if ((GPIOx->ODR & GPIO_Pin) != (u32)Bit_RESET)
   0:	68c3      	ldr	r3, [r0, #12]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:299
  {
    bitstatus = (u8)Bit_SET;
   2:	4219      	tst	r1, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:306
  else
  {
    bitstatus = (u8)Bit_RESET;
  }
  return bitstatus;
}
   4:	bf0c      	ite	eq
   6:	2000      	moveq	r0, #0
   8:	2001      	movne	r0, #1
   a:	4770      	bx	lr

Disassembly of section .text.GPIO_ReadOutputData:

00000000 <GPIO_ReadOutputData>:
GPIO_ReadOutputData():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:320
u16 GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
    
  return ((u16)GPIOx->ODR);
   0:	68c0      	ldr	r0, [r0, #12]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:321
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr
   6:	bf00      	nop

Disassembly of section .text.GPIO_SetBits:

00000000 <GPIO_SetBits>:
GPIO_SetBits():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:339
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  GPIOx->BSRR = GPIO_Pin;
   0:	6101      	str	r1, [r0, #16]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:340
}
   2:	4770      	bx	lr

Disassembly of section .text.GPIO_ResetBits:

00000000 <GPIO_ResetBits>:
GPIO_ResetBits():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:358
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  GPIOx->BRR = GPIO_Pin;
   0:	6141      	str	r1, [r0, #20]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:359
}
   2:	4770      	bx	lr

Disassembly of section .text.GPIO_WriteBit:

00000000 <GPIO_WriteBit>:
GPIO_WriteBit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:381
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_BIT_ACTION(BitVal)); 
  
  if (BitVal != Bit_RESET)
   0:	b10a      	cbz	r2, 6 <GPIO_WriteBit+0x6>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:383
  {
    GPIOx->BSRR = GPIO_Pin;
   2:	6101      	str	r1, [r0, #16]
   4:	4770      	bx	lr
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:387
  }
  else
  {
    GPIOx->BRR = GPIO_Pin;
   6:	6141      	str	r1, [r0, #20]
   8:	4770      	bx	lr
   a:	bf00      	nop

Disassembly of section .text.GPIO_Write:

00000000 <GPIO_Write>:
GPIO_Write():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:405
void GPIO_Write(GPIO_TypeDef* GPIOx, u16 PortVal)
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  
  GPIOx->ODR = PortVal;
   0:	60c1      	str	r1, [r0, #12]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:406
}
   2:	4770      	bx	lr

Disassembly of section .text.GPIO_PinLockConfig:

00000000 <GPIO_PinLockConfig>:
GPIO_PinLockConfig():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:426
  
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  tmp |= GPIO_Pin;
   0:	f441 3380 	orr.w	r3, r1, #65536	; 0x10000
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:428
  /* Set LCKK bit */
  GPIOx->LCKR = tmp;
   4:	6183      	str	r3, [r0, #24]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:430
  /* Reset LCKK bit */
  GPIOx->LCKR =  GPIO_Pin;
   6:	6181      	str	r1, [r0, #24]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:432
  /* Set LCKK bit */
  GPIOx->LCKR = tmp;
   8:	6183      	str	r3, [r0, #24]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:434
  /* Read LCKK bit*/
  tmp = GPIOx->LCKR;
   a:	6983      	ldr	r3, [r0, #24]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:436
  /* Read LCKK bit*/
  tmp = GPIOx->LCKR;
   c:	6983      	ldr	r3, [r0, #24]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:437
}
   e:	4770      	bx	lr

Disassembly of section .text.GPIO_EventOutputConfig:

00000000 <GPIO_EventOutputConfig>:
GPIO_EventOutputConfig():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:452
*                    This parameter can be GPIO_PinSourcex where x can be (0..15).
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_EventOutputConfig(u8 GPIO_PortSource, u8 GPIO_PinSource)
{
   0:	b410      	push	{r4}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:459

  /* Check the parameters */
  assert_param(IS_GPIO_EVENTOUT_PORT_SOURCE(GPIO_PortSource));
  assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
    
  tmpreg = AFIO->EVCR;
   2:	f04f 0300 	mov.w	r3, #0
   6:	f2c4 0301 	movt	r3, #16385	; 0x4001
   a:	681c      	ldr	r4, [r3, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:461
  /* Clear the PORT[6:4] and PIN[3:0] bits */
  tmpreg &= EVCR_PORTPINCONFIG_MASK;
   c:	f64f 7280 	movw	r2, #65408	; 0xff80
  10:	ea04 0202 	and.w	r2, r4, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:462
  tmpreg |= (u32)GPIO_PortSource << 0x04;
  14:	ea41 1100 	orr.w	r1, r1, r0, lsl #4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:463
  tmpreg |= GPIO_PinSource;
  18:	ea41 0202 	orr.w	r2, r1, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:465

  AFIO->EVCR = tmpreg;
  1c:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:466
}
  1e:	bc10      	pop	{r4}
  20:	4770      	bx	lr
  22:	bf00      	nop

Disassembly of section .text.GPIO_EventOutputCmd:

00000000 <GPIO_EventOutputCmd>:
GPIO_EventOutputCmd():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:481
void GPIO_EventOutputCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  *(vu32 *) EVCR_EVOE_BB = (u32)NewState;
   0:	f04f 031c 	mov.w	r3, #28
   4:	f2c4 2320 	movt	r3, #16928	; 0x4220
   8:	6018      	str	r0, [r3, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:482
}
   a:	4770      	bx	lr

Disassembly of section .text.GPIO_PinRemapConfig:

00000000 <GPIO_PinRemapConfig>:
GPIO_PinRemapConfig():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:520
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_PinRemapConfig(u32 GPIO_Remap, FunctionalState NewState)
{
   0:	b430      	push	{r4, r5}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:527

  /* Check the parameters */
  assert_param(IS_GPIO_REMAP(GPIO_Remap));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  tmpreg = AFIO->MAPR;
   2:	f04f 0300 	mov.w	r3, #0
   6:	f2c4 0301 	movt	r3, #16385	; 0x4001
   a:	685b      	ldr	r3, [r3, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:530

  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
  tmp = GPIO_Remap & LSB_MASK;
   c:	b284      	uxth	r4, r0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:532

  if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK))
   e:	f400 1240 	and.w	r2, r0, #3145728	; 0x300000
  12:	f5b2 1f40 	cmp.w	r2, #3145728	; 0x300000
  16:	d10a      	bne.n	2e <GPIO_PinRemapConfig+0x2e>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:534
  {
    tmpreg &= DBGAFR_SWJCFG_MASK;
  18:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:535
    AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
  1c:	f04f 0200 	mov.w	r2, #0
  20:	f2c4 0201 	movt	r2, #16385	; 0x4001
  24:	6855      	ldr	r5, [r2, #4]
  26:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
  2a:	6055      	str	r5, [r2, #4]
  2c:	e010      	b.n	50 <GPIO_PinRemapConfig+0x50>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:537
  }
  else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
  2e:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:529
  assert_param(IS_GPIO_REMAP(GPIO_Remap));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  tmpreg = AFIO->MAPR;

  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
  32:	bf1d      	ittte	ne
  34:	f3c0 4203 	ubfxne	r2, r0, #16, #4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:539
    tmpreg &= DBGAFR_SWJCFG_MASK;
    AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
  }
  else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
  {
    tmp1 = ((u32)0x03) << tmpmask;
  38:	2503      	movne	r5, #3
  3a:	fa05 f202 	lslne.w	r2, r5, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:545
    tmpreg &= ~tmp1;
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
  }
  else
  {
    tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
  3e:	0d42      	lsreq	r2, r0, #21
  40:	bf04      	itt	eq
  42:	0112      	lsleq	r2, r2, #4
  44:	fa04 f202 	lsleq.w	r2, r4, r2
  48:	ea23 0302 	bic.w	r3, r3, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:546
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
  4c:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:549
  }

  if (NewState != DISABLE)
  50:	b131      	cbz	r1, 60 <GPIO_PinRemapConfig+0x60>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:551
  {
    tmpreg |= (tmp << ((GPIO_Remap >> 0x15)*0x10));
  52:	ea4f 5050 	mov.w	r0, r0, lsr #21
  56:	ea4f 1000 	mov.w	r0, r0, lsl #4
  5a:	fa04 f400 	lsl.w	r4, r4, r0
  5e:	4323      	orrs	r3, r4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:554
  }

  AFIO->MAPR = tmpreg;
  60:	f04f 0200 	mov.w	r2, #0
  64:	f2c4 0201 	movt	r2, #16385	; 0x4001
  68:	6053      	str	r3, [r2, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:555
}
  6a:	bc30      	pop	{r4, r5}
  6c:	4770      	bx	lr
  6e:	bf00      	nop

Disassembly of section .text.GPIO_EXTILineConfig:

00000000 <GPIO_EXTILineConfig>:
GPIO_EXTILineConfig():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:570
*                   This parameter can be GPIO_PinSourcex where x can be (0..15).
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_EXTILineConfig(u8 GPIO_PortSource, u8 GPIO_PinSource)
{
   0:	b430      	push	{r4, r5}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:577

  /* Check the parameters */
  assert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource));
  assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
  
  tmp = ((u32)0x0F) << (0x04 * (GPIO_PinSource & (u8)0x03));
   2:	f001 0203 	and.w	r2, r1, #3
   6:	ea4f 0282 	mov.w	r2, r2, lsl #2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:579

  AFIO->EXTICR[GPIO_PinSource >> 0x02] &= ~tmp;
   a:	ea4f 0191 	mov.w	r1, r1, lsr #2
   e:	f04f 0300 	mov.w	r3, #0
  12:	f2c4 0301 	movt	r3, #16385	; 0x4001
  16:	f101 0102 	add.w	r1, r1, #2
  1a:	f853 5021 	ldr.w	r5, [r3, r1, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:577

  /* Check the parameters */
  assert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource));
  assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
  
  tmp = ((u32)0x0F) << (0x04 * (GPIO_PinSource & (u8)0x03));
  1e:	f04f 040f 	mov.w	r4, #15
  22:	fa04 f402 	lsl.w	r4, r4, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:579

  AFIO->EXTICR[GPIO_PinSource >> 0x02] &= ~tmp;
  26:	ea25 0404 	bic.w	r4, r5, r4
  2a:	f843 4021 	str.w	r4, [r3, r1, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:580
  AFIO->EXTICR[GPIO_PinSource >> 0x02] |= (((u32)GPIO_PortSource) << (0x04 * (GPIO_PinSource & (u8)0x03)));
  2e:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
  32:	fa00 f202 	lsl.w	r2, r0, r2
  36:	ea42 0404 	orr.w	r4, r2, r4
  3a:	f843 4021 	str.w	r4, [r3, r1, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_gpio.c:581
}
  3e:	bc30      	pop	{r4, r5}
  40:	4770      	bx	lr
  42:	bf00      	nop
