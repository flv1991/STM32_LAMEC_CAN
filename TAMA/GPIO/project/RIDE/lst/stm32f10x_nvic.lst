
C:\Users\fv\Desktop\TAMA\GPIO\project\RIDE\obj\stm32f10x_nvic.o:     file format elf32-littlearm
C:\Users\fv\Desktop\TAMA\GPIO\project\RIDE\obj\stm32f10x_nvic.o


Disassembly of section .text.NVIC_DeInit:

00000000 <NVIC_DeInit>:
NVIC_DeInit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:40
*******************************************************************************/
void NVIC_DeInit(void)
{
  u32 index = 0;
  
  NVIC->ICER[0] = 0xFFFFFFFF;
   0:	f44f 4361 	mov.w	r3, #57600	; 0xe100
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	f04f 31ff 	mov.w	r1, #4294967295
   c:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:41
  NVIC->ICER[1] = 0x0FFFFFFF;
  10:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
  14:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:42
  NVIC->ICPR[0] = 0xFFFFFFFF;
  18:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:43
  NVIC->ICPR[1] = 0x0FFFFFFF;
  1c:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:45
  
  for(index = 0; index < 0x0F; index++)
  20:	f04f 0300 	mov.w	r3, #0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:47
  {
     NVIC->IPR[index] = 0x00000000;
  24:	f44f 4161 	mov.w	r1, #57600	; 0xe100
  28:	f2ce 0100 	movt	r1, #57344	; 0xe000
  2c:	4618      	mov	r0, r3
  2e:	f103 02c0 	add.w	r2, r3, #192	; 0xc0
  32:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:45
  NVIC->ICER[0] = 0xFFFFFFFF;
  NVIC->ICER[1] = 0x0FFFFFFF;
  NVIC->ICPR[0] = 0xFFFFFFFF;
  NVIC->ICPR[1] = 0x0FFFFFFF;
  
  for(index = 0; index < 0x0F; index++)
  36:	f103 0301 	add.w	r3, r3, #1
  3a:	2b0f      	cmp	r3, #15
  3c:	d1f7      	bne.n	2e <NVIC_DeInit+0x2e>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:49
  {
     NVIC->IPR[index] = 0x00000000;
  } 
}
  3e:	4770      	bx	lr

Disassembly of section .text.NVIC_SCBDeInit:

00000000 <NVIC_SCBDeInit>:
NVIC_SCBDeInit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:63
*******************************************************************************/
void NVIC_SCBDeInit(void)
{
  u32 index = 0x00;
  
  SCB->ICSR = 0x0A000000;
   0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
   c:	605a      	str	r2, [r3, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:64
  SCB->VTOR = 0x00000000;
   e:	f04f 0200 	mov.w	r2, #0
  12:	609a      	str	r2, [r3, #8]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:65
  SCB->AIRCR = AIRCR_VECTKEY_MASK;
  14:	4611      	mov	r1, r2
  16:	f2c0 51fa 	movt	r1, #1530	; 0x5fa
  1a:	60d9      	str	r1, [r3, #12]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:66
  SCB->SCR = 0x00000000;
  1c:	611a      	str	r2, [r3, #16]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:67
  SCB->CCR = 0x00000000;
  1e:	615a      	str	r2, [r3, #20]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:70
  for(index = 0; index < 0x03; index++)
  {
     SCB->SHPR[index] = 0;
  20:	619a      	str	r2, [r3, #24]
  22:	61da      	str	r2, [r3, #28]
  24:	621a      	str	r2, [r3, #32]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:72
  }
  SCB->SHCSR = 0x00000000;
  26:	625a      	str	r2, [r3, #36]	; 0x24
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:73
  SCB->CFSR = 0xFFFFFFFF;
  28:	f04f 32ff 	mov.w	r2, #4294967295
  2c:	629a      	str	r2, [r3, #40]	; 0x28
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:74
  SCB->HFSR = 0xFFFFFFFF;
  2e:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:75
  SCB->DFSR = 0xFFFFFFFF;
  30:	631a      	str	r2, [r3, #48]	; 0x30
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:76
}
  32:	4770      	bx	lr

Disassembly of section .text.NVIC_PriorityGroupConfig:

00000000 <NVIC_PriorityGroupConfig>:
NVIC_PriorityGroupConfig():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:103
{
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
  SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
   0:	f040 60be 	orr.w	r0, r0, #99614720	; 0x5f00000
   4:	f440 2020 	orr.w	r0, r0, #655360	; 0xa0000
   8:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   c:	f2ce 0300 	movt	r3, #57344	; 0xe000
  10:	60d8      	str	r0, [r3, #12]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:104
}
  12:	4770      	bx	lr

Disassembly of section .text.NVIC_Init:

00000000 <NVIC_Init>:
NVIC_Init():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:117
*                    specified NVIC peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
{
   0:	b470      	push	{r4, r5, r6}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:127
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_InitStruct->NVIC_IRQChannel));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
   2:	78c3      	ldrb	r3, [r0, #3]
   4:	2b00      	cmp	r3, #0
   6:	d03e      	beq.n	86 <NVIC_Init+0x86>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:130
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
   8:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   c:	f2ce 0300 	movt	r3, #57344	; 0xe000
  10:	68db      	ldr	r3, [r3, #12]
  12:	ea6f 0303 	mvn.w	r3, r3
  16:	f3c3 2302 	ubfx	r3, r3, #8, #3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:131
    tmppre = (0x4 - tmppriority);
  1a:	f1c3 0204 	rsb	r2, r3, #4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:134
    tmpsub = tmpsub >> tmppriority;
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  1e:	7845      	ldrb	r5, [r0, #1]
  20:	fa05 f202 	lsl.w	r2, r5, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:132
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  {
    /* Compute the Corresponding IRQ Priority --------------------------------*/    
    tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
    tmppre = (0x4 - tmppriority);
    tmpsub = tmpsub >> tmppriority;
  24:	f04f 050f 	mov.w	r5, #15
  28:	fa25 f503 	lsr.w	r5, r5, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:135
    
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
  2c:	7881      	ldrb	r1, [r0, #2]
  2e:	400d      	ands	r5, r1
  30:	4315      	orrs	r5, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:137

    tmppriority = tmppriority << 0x04;
  32:	ea4f 1505 	mov.w	r5, r5, lsl #4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:138
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
  36:	7802      	ldrb	r2, [r0, #0]
  38:	f002 0403 	and.w	r4, r2, #3
  3c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
  40:	fa05 f504 	lsl.w	r5, r5, r4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:140
    
    tmpreg = NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)];
  44:	ea4f 0292 	mov.w	r2, r2, lsr #2
  48:	f44f 4361 	mov.w	r3, #57600	; 0xe100
  4c:	f2ce 0300 	movt	r3, #57344	; 0xe000
  50:	f102 02c0 	add.w	r2, r2, #192	; 0xc0
  54:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:141
    tmpmask = (u32)0xFF << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
  58:	f04f 01ff 	mov.w	r1, #255	; 0xff
  5c:	fa01 f104 	lsl.w	r1, r1, r4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:142
    tmpreg &= ~tmpmask;
  60:	ea26 0401 	bic.w	r4, r6, r1
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:143
    tmppriority &= tmpmask;  
  64:	ea05 0101 	and.w	r1, r5, r1
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:144
    tmpreg |= tmppriority;
  68:	4321      	orrs	r1, r4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:146

    NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)] = tmpreg;
  6a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:149
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  6e:	7802      	ldrb	r2, [r0, #0]
  70:	ea4f 1152 	mov.w	r1, r2, lsr #5
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:150
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  74:	f002 021f 	and.w	r2, r2, #31
  78:	f04f 0001 	mov.w	r0, #1
  7c:	fa00 f202 	lsl.w	r2, r0, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:149
    tmpreg |= tmppriority;

    NVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)] = tmpreg;
    
    /* Enable the Selected IRQ Channels --------------------------------------*/
    NVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  80:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
  84:	e010      	b.n	a8 <NVIC_Init+0xa8>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:155
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  }
  else
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  86:	7803      	ldrb	r3, [r0, #0]
  88:	ea4f 1253 	mov.w	r2, r3, lsr #5
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:156
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  8c:	f003 031f 	and.w	r3, r3, #31
  90:	f04f 0101 	mov.w	r1, #1
  94:	fa01 f103 	lsl.w	r1, r1, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:155
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  }
  else
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
  98:	f44f 4361 	mov.w	r3, #57600	; 0xe100
  9c:	f2ce 0300 	movt	r3, #57344	; 0xe000
  a0:	f102 0220 	add.w	r2, r2, #32
  a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:158
      (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
  }
}
  a8:	bc70      	pop	{r4, r5, r6}
  aa:	4770      	bx	lr

Disassembly of section .text.NVIC_StructInit:

00000000 <NVIC_StructInit>:
NVIC_StructInit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:171
* Return         : None
*******************************************************************************/
void NVIC_StructInit(NVIC_InitTypeDef* NVIC_InitStruct)
{
  /* NVIC_InitStruct members default value */
  NVIC_InitStruct->NVIC_IRQChannel = 0x00;
   0:	f04f 0300 	mov.w	r3, #0
   4:	7003      	strb	r3, [r0, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:172
  NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority = 0x00;
   6:	7043      	strb	r3, [r0, #1]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:173
  NVIC_InitStruct->NVIC_IRQChannelSubPriority = 0x00;
   8:	7083      	strb	r3, [r0, #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:174
  NVIC_InitStruct->NVIC_IRQChannelCmd = DISABLE;
   a:	70c3      	strb	r3, [r0, #3]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:175
}
   c:	4770      	bx	lr
   e:	bf00      	nop

Disassembly of section .text.NVIC_SETPRIMASK:

00000000 <NVIC_SETPRIMASK>:
NVIC_SETPRIMASK():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:185
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_SETPRIMASK(void)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:186
  __SETPRIMASK();
   2:	f7ff fffe 	bl	0 <__SETPRIMASK>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:187
}
   6:	bd08      	pop	{r3, pc}

Disassembly of section .text.NVIC_RESETPRIMASK:

00000000 <NVIC_RESETPRIMASK>:
NVIC_RESETPRIMASK():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:197
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_RESETPRIMASK(void)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:198
  __RESETPRIMASK();
   2:	f7ff fffe 	bl	0 <__RESETPRIMASK>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:199
}
   6:	bd08      	pop	{r3, pc}

Disassembly of section .text.NVIC_SETFAULTMASK:

00000000 <NVIC_SETFAULTMASK>:
NVIC_SETFAULTMASK():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:209
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_SETFAULTMASK(void)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:210
  __SETFAULTMASK();
   2:	f7ff fffe 	bl	0 <__SETFAULTMASK>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:211
}
   6:	bd08      	pop	{r3, pc}

Disassembly of section .text.NVIC_RESETFAULTMASK:

00000000 <NVIC_RESETFAULTMASK>:
NVIC_RESETFAULTMASK():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:221
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_RESETFAULTMASK(void)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:222
  __RESETFAULTMASK();
   2:	f7ff fffe 	bl	0 <__RESETFAULTMASK>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:223
}
   6:	bd08      	pop	{r3, pc}

Disassembly of section .text.NVIC_BASEPRICONFIG:

00000000 <NVIC_BASEPRICONFIG>:
NVIC_BASEPRICONFIG():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:235
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_BASEPRICONFIG(u32 NewPriority)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:239
  /* Check the parameters */
  assert_param(IS_NVIC_BASE_PRI(NewPriority));
  
  __BASEPRICONFIG(NewPriority << 0x04);
   2:	ea4f 1000 	mov.w	r0, r0, lsl #4
   6:	f7ff fffe 	bl	0 <__BASEPRICONFIG>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:240
}
   a:	bd08      	pop	{r3, pc}

Disassembly of section .text.NVIC_GetBASEPRI:

00000000 <NVIC_GetBASEPRI>:
NVIC_GetBASEPRI():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:250
* Input          : None
* Output         : None
* Return         : BASEPRI register value
*******************************************************************************/
u32 NVIC_GetBASEPRI(void)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:251
  return (__GetBASEPRI());
   2:	f7ff fffe 	bl	0 <__GetBASEPRI>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:252
}
   6:	bd08      	pop	{r3, pc}

Disassembly of section .text.NVIC_GetCurrentPendingIRQChannel:

00000000 <NVIC_GetCurrentPendingIRQChannel>:
NVIC_GetCurrentPendingIRQChannel():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:263
* Output         : None
* Return         : Pending IRQ Channel Identifier.
*******************************************************************************/
u16 NVIC_GetCurrentPendingIRQChannel(void)
{
  return ((u16)((SCB->ICSR & (u32)0x003FF000) >> 0x0C));
   0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	6858      	ldr	r0, [r3, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:264
}
   a:	f3c0 3009 	ubfx	r0, r0, #12, #10
   e:	4770      	bx	lr

Disassembly of section .text.NVIC_GetIRQChannelPendingBitStatus:

00000000 <NVIC_GetIRQChannelPendingBitStatus>:
NVIC_GetIRQChannelPendingBitStatus():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:282
  u32 tmp = 0x00;
  
  /* Check the parameters */
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_IRQChannel));
  
  tmp = ((u32)0x01 << (NVIC_IRQChannel & (u32)0x1F));
   0:	f000 031f 	and.w	r3, r0, #31
   4:	f04f 0201 	mov.w	r2, #1
   8:	fa02 f303 	lsl.w	r3, r2, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:284

  if (((NVIC->ISPR[(NVIC_IRQChannel >> 0x05)]) & tmp) == tmp)
   c:	ea4f 1050 	mov.w	r0, r0, lsr #5
  10:	f44f 4261 	mov.w	r2, #57600	; 0xe100
  14:	f2ce 0200 	movt	r2, #57344	; 0xe000
  18:	f100 0040 	add.w	r0, r0, #64	; 0x40
  1c:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
  20:	4018      	ands	r0, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:293
  else
  {
    pendingirqstatus = RESET;
  }
  return pendingirqstatus;
}
  22:	4283      	cmp	r3, r0
  24:	bf14      	ite	ne
  26:	2000      	movne	r0, #0
  28:	2001      	moveq	r0, #1
  2a:	4770      	bx	lr

Disassembly of section .text.NVIC_SetIRQChannelPendingBit:

00000000 <NVIC_SetIRQChannelPendingBit>:
NVIC_SetIRQChannelPendingBit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:307
void NVIC_SetIRQChannelPendingBit(u8 NVIC_IRQChannel)
{
  /* Check the parameters */
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_IRQChannel));
  
  *(vu32*) 0xE000EF00 = (u32)NVIC_IRQChannel;
   0:	f44f 436f 	mov.w	r3, #61184	; 0xef00
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	6018      	str	r0, [r3, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:308
}
   a:	4770      	bx	lr

Disassembly of section .text.NVIC_ClearIRQChannelPendingBit:

00000000 <NVIC_ClearIRQChannelPendingBit>:
NVIC_ClearIRQChannelPendingBit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:322
void NVIC_ClearIRQChannelPendingBit(u8 NVIC_IRQChannel)
{
  /* Check the parameters */
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_IRQChannel));
  
  NVIC->ICPR[(NVIC_IRQChannel >> 0x05)] = (u32)0x01 << (NVIC_IRQChannel & (u32)0x1F);
   0:	ea4f 1250 	mov.w	r2, r0, lsr #5
   4:	f000 001f 	and.w	r0, r0, #31
   8:	f04f 0301 	mov.w	r3, #1
   c:	fa03 f000 	lsl.w	r0, r3, r0
  10:	f44f 4361 	mov.w	r3, #57600	; 0xe100
  14:	f2ce 0300 	movt	r3, #57344	; 0xe000
  18:	f102 0260 	add.w	r2, r2, #96	; 0x60
  1c:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:323
}
  20:	4770      	bx	lr
  22:	bf00      	nop

Disassembly of section .text.NVIC_GetCurrentActiveHandler:

00000000 <NVIC_GetCurrentActiveHandler>:
NVIC_GetCurrentActiveHandler():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:335
* Output         : None
* Return         : Active Handler Identifier.
*******************************************************************************/
u16 NVIC_GetCurrentActiveHandler(void)
{
  return ((u16)(SCB->ICSR & (u32)0x3FF));
   0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	6858      	ldr	r0, [r3, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:336
}
   a:	ea4f 5080 	mov.w	r0, r0, lsl #22
   e:	ea4f 5090 	mov.w	r0, r0, lsr #22
  12:	4770      	bx	lr

Disassembly of section .text.NVIC_GetIRQChannelActiveBitStatus:

00000000 <NVIC_GetIRQChannelActiveBitStatus>:
NVIC_GetIRQChannelActiveBitStatus():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:354
  u32 tmp = 0x00;

  /* Check the parameters */
  assert_param(IS_NVIC_IRQ_CHANNEL(NVIC_IRQChannel));
  
  tmp = ((u32)0x01 << (NVIC_IRQChannel & (u32)0x1F));
   0:	f000 031f 	and.w	r3, r0, #31
   4:	f04f 0201 	mov.w	r2, #1
   8:	fa02 f303 	lsl.w	r3, r2, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:356

  if (((NVIC->IABR[(NVIC_IRQChannel >> 0x05)]) & tmp) == tmp )
   c:	ea4f 1050 	mov.w	r0, r0, lsr #5
  10:	f44f 4261 	mov.w	r2, #57600	; 0xe100
  14:	f2ce 0200 	movt	r2, #57344	; 0xe000
  18:	f100 0080 	add.w	r0, r0, #128	; 0x80
  1c:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
  20:	4018      	ands	r0, r3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:365
  else
  {
    activeirqstatus = RESET;
  }
  return activeirqstatus;
}
  22:	4283      	cmp	r3, r0
  24:	bf14      	ite	ne
  26:	2000      	movne	r0, #0
  28:	2001      	moveq	r0, #1
  2a:	4770      	bx	lr

Disassembly of section .text.NVIC_GetCPUID:

00000000 <NVIC_GetCPUID>:
NVIC_GetCPUID():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:377
* Output         : None
* Return         : CPU ID.
*******************************************************************************/
u32 NVIC_GetCPUID(void)
{
  return (SCB->CPUID);
   0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	6818      	ldr	r0, [r3, #0]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:378
}
   a:	4770      	bx	lr

Disassembly of section .text.NVIC_SetVectorTable:

00000000 <NVIC_SetVectorTable>:
NVIC_SetVectorTable():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:399
{ 
  /* Check the parameters */
  assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
  assert_param(IS_NVIC_OFFSET(Offset));  
   
  SCB->VTOR = NVIC_VectTab | (Offset & (u32)0x1FFFFF80);
   0:	f021 4160 	bic.w	r1, r1, #3758096384	; 0xe0000000
   4:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   8:	4301      	orrs	r1, r0
   a:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   e:	f2ce 0300 	movt	r3, #57344	; 0xe000
  12:	6099      	str	r1, [r3, #8]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:400
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.NVIC_GenerateSystemReset:

00000000 <NVIC_GenerateSystemReset>:
NVIC_GenerateSystemReset():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:411
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_GenerateSystemReset(void)
{
  SCB->AIRCR = AIRCR_VECTKEY_MASK | (u32)0x04;
   0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	f04f 0204 	mov.w	r2, #4
   c:	f2c0 52fa 	movt	r2, #1530	; 0x5fa
  10:	60da      	str	r2, [r3, #12]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:412
}
  12:	4770      	bx	lr

Disassembly of section .text.NVIC_GenerateCoreReset:

00000000 <NVIC_GenerateCoreReset>:
NVIC_GenerateCoreReset():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:423
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_GenerateCoreReset(void)
{
  SCB->AIRCR = AIRCR_VECTKEY_MASK | (u32)0x01;
   0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	f04f 0201 	mov.w	r2, #1
   c:	f2c0 52fa 	movt	r2, #1530	; 0x5fa
  10:	60da      	str	r2, [r3, #12]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:424
}
  12:	4770      	bx	lr

Disassembly of section .text.NVIC_SystemLPConfig:

00000000 <NVIC_SystemLPConfig>:
NVIC_SystemLPConfig():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:446
{
  /* Check the parameters */
  assert_param(IS_NVIC_LP(LowPowerMode));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  if (NewState != DISABLE)
   0:	b139      	cbz	r1, 12 <NVIC_SystemLPConfig+0x12>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:448
  {
    SCB->SCR |= LowPowerMode;
   2:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   6:	f2ce 0300 	movt	r3, #57344	; 0xe000
   a:	691a      	ldr	r2, [r3, #16]
   c:	4310      	orrs	r0, r2
   e:	6118      	str	r0, [r3, #16]
  10:	4770      	bx	lr
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:452
  }
  else
  {
    SCB->SCR &= (u32)(~(u32)LowPowerMode);
  12:	f44f 436d 	mov.w	r3, #60672	; 0xed00
  16:	f2ce 0300 	movt	r3, #57344	; 0xe000
  1a:	691a      	ldr	r2, [r3, #16]
  1c:	ea22 0000 	bic.w	r0, r2, r0
  20:	6118      	str	r0, [r3, #16]
  22:	4770      	bx	lr

Disassembly of section .text.NVIC_SystemHandlerConfig:

00000000 <NVIC_SystemHandlerConfig>:
NVIC_SystemHandlerConfig():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:478

  /* Check the parameters */
  assert_param(IS_CONFIG_SYSTEM_HANDLER(SystemHandler));
  assert_param(IS_FUNCTIONAL_STATE(NewState)); 
  
  tmpreg =  (u32)0x01 << (SystemHandler & (u32)0x1F);
   0:	f000 001f 	and.w	r0, r0, #31
   4:	f04f 0301 	mov.w	r3, #1
   8:	fa03 f000 	lsl.w	r0, r3, r0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:480

  if (NewState != DISABLE)
   c:	b139      	cbz	r1, 1e <NVIC_SystemHandlerConfig+0x1e>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:482
  {
    SCB->SHCSR |= tmpreg;
   e:	f44f 436d 	mov.w	r3, #60672	; 0xed00
  12:	f2ce 0300 	movt	r3, #57344	; 0xe000
  16:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  18:	4310      	orrs	r0, r2
  1a:	6258      	str	r0, [r3, #36]	; 0x24
  1c:	4770      	bx	lr
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:486
  }
  else
  {
    SCB->SHCSR &= ~tmpreg;
  1e:	f44f 436d 	mov.w	r3, #60672	; 0xed00
  22:	f2ce 0300 	movt	r3, #57344	; 0xe000
  26:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  28:	ea22 0000 	bic.w	r0, r2, r0
  2c:	6258      	str	r0, [r3, #36]	; 0x24
  2e:	4770      	bx	lr

Disassembly of section .text.NVIC_SystemHandlerPriorityConfig:

00000000 <NVIC_SystemHandlerPriorityConfig>:
NVIC_SystemHandlerPriorityConfig():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:512
* Output         : None
* Return         : None
*******************************************************************************/
void NVIC_SystemHandlerPriorityConfig(u32 SystemHandler, u8 SystemHandlerPreemptionPriority,
                                      u8 SystemHandlerSubPriority)
{
   0:	b470      	push	{r4, r5, r6}
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:521
  /* Check the parameters */
  assert_param(IS_PRIORITY_SYSTEM_HANDLER(SystemHandler));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(SystemHandlerPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(SystemHandlerSubPriority));
    
  tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
   2:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   6:	f2ce 0300 	movt	r3, #57344	; 0xe000
   a:	68dc      	ldr	r4, [r3, #12]
   c:	ea6f 0404 	mvn.w	r4, r4
  10:	f3c4 2402 	ubfx	r4, r4, #8, #3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:522
  tmp1 = (0x4 - tmppriority);
  14:	f1c4 0504 	rsb	r5, r4, #4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:525
  tmp2 = tmp2 >> tmppriority;
    
  tmppriority = (u32)SystemHandlerPreemptionPriority << tmp1;
  18:	fa01 f105 	lsl.w	r1, r1, r5
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:523
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(SystemHandlerPreemptionPriority));  
  assert_param(IS_NVIC_SUB_PRIORITY(SystemHandlerSubPriority));
    
  tmppriority = (0x700 - (SCB->AIRCR & (u32)0x700))>> 0x08;
  tmp1 = (0x4 - tmppriority);
  tmp2 = tmp2 >> tmppriority;
  1c:	f04f 06ff 	mov.w	r6, #255	; 0xff
  20:	fa26 f404 	lsr.w	r4, r6, r4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:526
    
  tmppriority = (u32)SystemHandlerPreemptionPriority << tmp1;
  tmppriority |=  SystemHandlerSubPriority & tmp2;
  24:	ea02 0404 	and.w	r4, r2, r4
  28:	ea44 0101 	orr.w	r1, r4, r1
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:528

  tmppriority = tmppriority << 0x04;
  2c:	ea4f 1101 	mov.w	r1, r1, lsl #4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:530
  tmp1 = SystemHandler & (u32)0xC0;
  tmp1 = tmp1 >> 0x06; 
  30:	f3c0 1281 	ubfx	r2, r0, #6, #2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:531
  tmp2 = (SystemHandler >> 0x08) & (u32)0x03;
  34:	f3c0 2001 	ubfx	r0, r0, #8, #2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:532
  tmppriority = tmppriority << (tmp2 * 0x08);
  38:	ea4f 00c0 	mov.w	r0, r0, lsl #3
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:535
  handlermask = (u32)0xFF << (tmp2 * 0x08);
  
  SCB->SHPR[tmp1] &= ~handlermask;
  3c:	f102 0206 	add.w	r2, r2, #6
  40:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:533
  tmppriority = tmppriority << 0x04;
  tmp1 = SystemHandler & (u32)0xC0;
  tmp1 = tmp1 >> 0x06; 
  tmp2 = (SystemHandler >> 0x08) & (u32)0x03;
  tmppriority = tmppriority << (tmp2 * 0x08);
  handlermask = (u32)0xFF << (tmp2 * 0x08);
  44:	fa06 f600 	lsl.w	r6, r6, r0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:535
  
  SCB->SHPR[tmp1] &= ~handlermask;
  48:	ea24 0606 	bic.w	r6, r4, r6
  4c:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:536
  SCB->SHPR[tmp1] |= tmppriority;
  50:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:532

  tmppriority = tmppriority << 0x04;
  tmp1 = SystemHandler & (u32)0xC0;
  tmp1 = tmp1 >> 0x06; 
  tmp2 = (SystemHandler >> 0x08) & (u32)0x03;
  tmppriority = tmppriority << (tmp2 * 0x08);
  54:	fa01 f000 	lsl.w	r0, r1, r0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:536
  handlermask = (u32)0xFF << (tmp2 * 0x08);
  
  SCB->SHPR[tmp1] &= ~handlermask;
  SCB->SHPR[tmp1] |= tmppriority;
  58:	4330      	orrs	r0, r6
  5a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:537
}
  5e:	bc70      	pop	{r4, r5, r6}
  60:	4770      	bx	lr
  62:	bf00      	nop

Disassembly of section .text.NVIC_GetSystemHandlerPendingBitStatus:

00000000 <NVIC_GetSystemHandlerPendingBitStatus>:
NVIC_GetSystemHandlerPendingBitStatus():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:561

  /* Check the parameters */
  assert_param(IS_GET_PENDING_SYSTEM_HANDLER(SystemHandler));
  
  tmppos = (SystemHandler >> 0x0A);
  tmppos &= (u32)0x0F;
   0:	f3c0 2083 	ubfx	r0, r0, #10, #4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:563

  tmppos = (u32)0x01 << tmppos;
   4:	f04f 0301 	mov.w	r3, #1
   8:	fa03 f300 	lsl.w	r3, r3, r0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:565

  tmp = SCB->SHCSR & tmppos;
   c:	f44f 426d 	mov.w	r2, #60672	; 0xed00
  10:	f2ce 0200 	movt	r2, #57344	; 0xe000
  14:	6a50      	ldr	r0, [r2, #36]	; 0x24
  16:	ea03 0000 	and.w	r0, r3, r0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:576
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  1a:	4283      	cmp	r3, r0
  1c:	bf14      	ite	ne
  1e:	2000      	movne	r0, #0
  20:	2001      	moveq	r0, #1
  22:	4770      	bx	lr

Disassembly of section .text.NVIC_SetSystemHandlerPendingBit:

00000000 <NVIC_SetSystemHandlerPendingBit>:
NVIC_SetSystemHandlerPendingBit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:600
  assert_param(IS_SET_PENDING_SYSTEM_HANDLER(SystemHandler));
  
  /* Get the System Handler pending bit position */
  tmp = SystemHandler & (u32)0x1F;
  /* Set the corresponding System Handler pending bit */
  SCB->ICSR |= ((u32)0x01 << tmp);
   0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	685a      	ldr	r2, [r3, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:598

  /* Check the parameters */
  assert_param(IS_SET_PENDING_SYSTEM_HANDLER(SystemHandler));
  
  /* Get the System Handler pending bit position */
  tmp = SystemHandler & (u32)0x1F;
   a:	f000 001f 	and.w	r0, r0, #31
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:600
  /* Set the corresponding System Handler pending bit */
  SCB->ICSR |= ((u32)0x01 << tmp);
   e:	f04f 0101 	mov.w	r1, #1
  12:	fa01 f000 	lsl.w	r0, r1, r0
  16:	ea40 0202 	orr.w	r2, r0, r2
  1a:	605a      	str	r2, [r3, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:601
}
  1c:	4770      	bx	lr
  1e:	bf00      	nop

Disassembly of section .text.NVIC_ClearSystemHandlerPendingBit:

00000000 <NVIC_ClearSystemHandlerPendingBit>:
NVIC_ClearSystemHandlerPendingBit():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:624
  assert_param(IS_CLEAR_SYSTEM_HANDLER(SystemHandler));
  
  /* Get the System Handler pending bit position */
  tmp = SystemHandler & (u32)0x1F;
  /* Clear the corresponding System Handler pending bit */
  SCB->ICSR |= ((u32)0x01 << (tmp - 0x01));
   0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   4:	f2ce 0300 	movt	r3, #57344	; 0xe000
   8:	685a      	ldr	r2, [r3, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:622

  /* Check the parameters */
  assert_param(IS_CLEAR_SYSTEM_HANDLER(SystemHandler));
  
  /* Get the System Handler pending bit position */
  tmp = SystemHandler & (u32)0x1F;
   a:	f000 011f 	and.w	r1, r0, #31
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:624
  /* Clear the corresponding System Handler pending bit */
  SCB->ICSR |= ((u32)0x01 << (tmp - 0x01));
   e:	f101 31ff 	add.w	r1, r1, #4294967295
  12:	f04f 0001 	mov.w	r0, #1
  16:	fa00 f101 	lsl.w	r1, r0, r1
  1a:	ea41 0202 	orr.w	r2, r1, r2
  1e:	605a      	str	r2, [r3, #4]
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:625
}
  20:	4770      	bx	lr
  22:	bf00      	nop

Disassembly of section .text.NVIC_GetSystemHandlerActiveBitStatus:

00000000 <NVIC_GetSystemHandlerActiveBitStatus>:
NVIC_GetSystemHandlerActiveBitStatus():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:653
  u32 tmp = 0x00, tmppos = 0x00;

  /* Check the parameters */
  assert_param(IS_GET_ACTIVE_SYSTEM_HANDLER(SystemHandler));
  
  tmppos = (SystemHandler >> 0x0E) & (u32)0x0F;
   0:	f3c0 3083 	ubfx	r0, r0, #14, #4
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:655

  tmppos = (u32)0x01 << tmppos;
   4:	f04f 0301 	mov.w	r3, #1
   8:	fa03 f300 	lsl.w	r3, r3, r0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:657

  tmp = SCB->SHCSR & tmppos;
   c:	f44f 426d 	mov.w	r2, #60672	; 0xed00
  10:	f2ce 0200 	movt	r2, #57344	; 0xe000
  14:	6a50      	ldr	r0, [r2, #36]	; 0x24
  16:	ea03 0000 	and.w	r0, r3, r0
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:668
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  1a:	4283      	cmp	r3, r0
  1c:	bf14      	ite	ne
  1e:	2000      	movne	r0, #0
  20:	2001      	moveq	r0, #1
  22:	4770      	bx	lr

Disassembly of section .text.NVIC_GetFaultHandlerSources:

00000000 <NVIC_GetFaultHandlerSources>:
NVIC_GetFaultHandlerSources():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:692
  u32 tmpreg = 0x00, tmppos = 0x00;

  /* Check the parameters */
  assert_param(IS_FAULT_SOURCE_SYSTEM_HANDLER(SystemHandler));
  
  tmpreg = (SystemHandler >> 0x12) & (u32)0x03;
   0:	f3c0 4381 	ubfx	r3, r0, #18, #2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:695
  tmppos = (SystemHandler >> 0x14) & (u32)0x03;

  if (tmpreg == 0x00)
   4:	b92b      	cbnz	r3, 12 <NVIC_GetFaultHandlerSources+0x12>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:697
  {
    faultsources = SCB->HFSR;
   6:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   a:	f2ce 0300 	movt	r3, #57344	; 0xe000
   e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
  10:	4770      	bx	lr
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:699
  }
  else if (tmpreg == 0x01)
  12:	2b01      	cmp	r3, #1
  14:	d111      	bne.n	3a <NVIC_GetFaultHandlerSources+0x3a>
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:693

  /* Check the parameters */
  assert_param(IS_FAULT_SOURCE_SYSTEM_HANDLER(SystemHandler));
  
  tmpreg = (SystemHandler >> 0x12) & (u32)0x03;
  tmppos = (SystemHandler >> 0x14) & (u32)0x03;
  16:	f3c0 5301 	ubfx	r3, r0, #20, #2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:701
  {
    faultsources = SCB->HFSR;
  }
  else if (tmpreg == 0x01)
  {
    faultsources = SCB->CFSR >> (tmppos * 0x08);
  1a:	f44f 426d 	mov.w	r2, #60672	; 0xed00
  1e:	f2ce 0200 	movt	r2, #57344	; 0xe000
  22:	6a90      	ldr	r0, [r2, #40]	; 0x28
  24:	ea4f 02c3 	mov.w	r2, r3, lsl #3
  28:	fa20 f002 	lsr.w	r0, r0, r2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:702
    if (tmppos != 0x02)
  2c:	2b02      	cmp	r3, #2
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:704
    {
      faultsources &= (u32)0x0F;
  2e:	bf14      	ite	ne
  30:	f000 000f 	andne.w	r0, r0, #15
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:708
    }
    else
    {
      faultsources &= (u32)0xFF;
  34:	f000 00ff 	andeq.w	r0, r0, #255	; 0xff
  38:	4770      	bx	lr
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:713
    }
  }
  else
  {
    faultsources = SCB->DFSR;
  3a:	f44f 436d 	mov.w	r3, #60672	; 0xed00
  3e:	f2ce 0300 	movt	r3, #57344	; 0xe000
  42:	6b18      	ldr	r0, [r3, #48]	; 0x30
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:716
  }
  return faultsources;
}
  44:	4770      	bx	lr
  46:	bf00      	nop

Disassembly of section .text.NVIC_GetFaultAddress:

00000000 <NVIC_GetFaultAddress>:
NVIC_GetFaultAddress():
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:740
  /* Check the parameters */
  assert_param(IS_FAULT_ADDRESS_SYSTEM_HANDLER(SystemHandler));
  
  tmp = (SystemHandler >> 0x16) & (u32)0x01;

  if (tmp == 0x00)
   0:	f410 0f80 	tst.w	r0, #4194304	; 0x400000
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:742
  {
    faultaddress = SCB->MMFAR;
   4:	f44f 436d 	mov.w	r3, #60672	; 0xed00
   8:	f2ce 0300 	movt	r3, #57344	; 0xe000
   c:	bf0c      	ite	eq
   e:	6b58      	ldreq	r0, [r3, #52]	; 0x34
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:746
  }
  else
  {
    faultaddress = SCB->BFAR;
  10:	6b98      	ldrne	r0, [r3, #56]	; 0x38
C:\Users\fv\Desktop\TAMA\GPIO\library\src/stm32f10x_nvic.c:749
  }
  return faultaddress;
}
  12:	4770      	bx	lr
