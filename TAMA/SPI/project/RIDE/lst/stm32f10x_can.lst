
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\project\RIDE\obj\stm32f10x_can.o:     file format elf32-littlearm
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\project\RIDE\obj\stm32f10x_can.o


Disassembly of section .text.CheckITStatus:

00000000 <CheckITStatus>:
CheckITStatus():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:896
  ITStatus pendingbitstatus = RESET;

  if ((CAN_Reg & It_Bit) != (u32)RESET)
  {
    /* CAN_IT is set */
    pendingbitstatus = SET;
   0:	4201      	tst	r1, r0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:905
    /* CAN_IT is reset */
    pendingbitstatus = RESET;
  }

  return pendingbitstatus;
}
   2:	bf0c      	ite	eq
   4:	2000      	moveq	r0, #0
   6:	2001      	movne	r0, #1
   8:	4770      	bx	lr
   a:	bf00      	nop

Disassembly of section .text.CAN_DeInit:

00000000 <CAN_DeInit>:
CAN_DeInit():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:89
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CAN_DeInit(void)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:91
  /* Enable CAN reset state */
  RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN, ENABLE);
   2:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
   6:	f04f 0101 	mov.w	r1, #1
   a:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:93
  /* Release CAN from reset state */
  RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN, DISABLE);
   e:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
  12:	f04f 0100 	mov.w	r1, #0
  16:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:94
}
  1a:	bd08      	pop	{r3, pc}

Disassembly of section .text.CAN_Init:

00000000 <CAN_Init>:
CAN_Init():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:125
  assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
  assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
  assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));

  /* Request initialisation */
  CAN->MCR = MCR_INRQ;
   0:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	f04f 0201 	mov.w	r2, #1
   c:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:128

  /* ...and check acknowledged */
  if ((CAN->MSR & MSR_INAK) == 0)
   e:	685b      	ldr	r3, [r3, #4]
  10:	f013 0f01 	tst.w	r3, #1
  14:	d078      	beq.n	108 <CAN_Init+0x108>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:135
    InitStatus = CANINITFAILED;
  }
  else
  {
    /* Set the time triggered communication mode */
    if (CAN_InitStruct->CAN_TTCM == ENABLE)
  16:	7803      	ldrb	r3, [r0, #0]
  18:	4293      	cmp	r3, r2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:137
    {
      CAN->MCR |= MCR_TTCM;
  1a:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  1e:	f2c4 0300 	movt	r3, #16384	; 0x4000
  22:	681a      	ldr	r2, [r3, #0]
  24:	bf0c      	ite	eq
  26:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:141
    }
    else
    {
      CAN->MCR &= ~MCR_TTCM;
  2a:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
  2e:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:145
    }

    /* Set the automatic bus-off management */
    if (CAN_InitStruct->CAN_ABOM == ENABLE)
  30:	7843      	ldrb	r3, [r0, #1]
  32:	2b01      	cmp	r3, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:147
    {
      CAN->MCR |= MCR_ABOM;
  34:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  38:	f2c4 0300 	movt	r3, #16384	; 0x4000
  3c:	681a      	ldr	r2, [r3, #0]
  3e:	bf0c      	ite	eq
  40:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:151
    }
    else
    {
      CAN->MCR &= ~MCR_ABOM;
  44:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
  48:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:155
    }

    /* Set the automatic wake-up mode */
    if (CAN_InitStruct->CAN_AWUM == ENABLE)
  4a:	7883      	ldrb	r3, [r0, #2]
  4c:	2b01      	cmp	r3, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:157
    {
      CAN->MCR |= MCR_AWUM;
  4e:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  52:	f2c4 0300 	movt	r3, #16384	; 0x4000
  56:	681a      	ldr	r2, [r3, #0]
  58:	bf0c      	ite	eq
  5a:	f042 0220 	orreq.w	r2, r2, #32
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:161
    }
    else
    {
      CAN->MCR &= ~MCR_AWUM;
  5e:	f022 0220 	bicne.w	r2, r2, #32
  62:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:165
    }

    /* Set the no automatic retransmission */
    if (CAN_InitStruct->CAN_NART == ENABLE)
  64:	78c3      	ldrb	r3, [r0, #3]
  66:	2b01      	cmp	r3, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:167
    {
      CAN->MCR |= MCR_NART;
  68:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  6c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  70:	681a      	ldr	r2, [r3, #0]
  72:	bf0c      	ite	eq
  74:	f042 0210 	orreq.w	r2, r2, #16
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:171
    }
    else
    {
      CAN->MCR &= ~MCR_NART;
  78:	f022 0210 	bicne.w	r2, r2, #16
  7c:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:175
    }

    /* Set the receive FIFO locked mode */
    if (CAN_InitStruct->CAN_RFLM == ENABLE)
  7e:	7903      	ldrb	r3, [r0, #4]
  80:	2b01      	cmp	r3, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:177
    {
      CAN->MCR |= MCR_RFLM;
  82:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  86:	f2c4 0300 	movt	r3, #16384	; 0x4000
  8a:	681a      	ldr	r2, [r3, #0]
  8c:	bf0c      	ite	eq
  8e:	f042 0208 	orreq.w	r2, r2, #8
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:181
    }
    else
    {
      CAN->MCR &= ~MCR_RFLM;
  92:	f022 0208 	bicne.w	r2, r2, #8
  96:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:185
    }

    /* Set the transmit FIFO priority */
    if (CAN_InitStruct->CAN_TXFP == ENABLE)
  98:	7943      	ldrb	r3, [r0, #5]
  9a:	2b01      	cmp	r3, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:187
    {
      CAN->MCR |= MCR_TXFP;
  9c:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  a0:	f2c4 0300 	movt	r3, #16384	; 0x4000
  a4:	681a      	ldr	r2, [r3, #0]
  a6:	bf0c      	ite	eq
  a8:	f042 0204 	orreq.w	r2, r2, #4
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:191
    }
    else
    {
      CAN->MCR &= ~MCR_TXFP;
  ac:	f022 0204 	bicne.w	r2, r2, #4
  b0:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:195
    }

    /* Set the bit timing register */
    CAN->BTR = (u32)((u32)CAN_InitStruct->CAN_Mode << 30) | ((u32)CAN_InitStruct->CAN_SJW << 24) |
  b2:	79c2      	ldrb	r2, [r0, #7]
  b4:	7983      	ldrb	r3, [r0, #6]
  b6:	ea4f 7383 	mov.w	r3, r3, lsl #30
  ba:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:196
               ((u32)CAN_InitStruct->CAN_BS1 << 16) | ((u32)CAN_InitStruct->CAN_BS2 << 20) |
  be:	7a02      	ldrb	r2, [r0, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:195
    {
      CAN->MCR &= ~MCR_TXFP;
    }

    /* Set the bit timing register */
    CAN->BTR = (u32)((u32)CAN_InitStruct->CAN_Mode << 30) | ((u32)CAN_InitStruct->CAN_SJW << 24) |
  c0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:196
               ((u32)CAN_InitStruct->CAN_BS1 << 16) | ((u32)CAN_InitStruct->CAN_BS2 << 20) |
  c4:	7a42      	ldrb	r2, [r0, #9]
  c6:	ea43 5202 	orr.w	r2, r3, r2, lsl #20
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:197
               ((u32)CAN_InitStruct->CAN_Prescaler - 1);
  ca:	8943      	ldrh	r3, [r0, #10]
  cc:	f103 33ff 	add.w	r3, r3, #4294967295
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:196
      CAN->MCR &= ~MCR_TXFP;
    }

    /* Set the bit timing register */
    CAN->BTR = (u32)((u32)CAN_InitStruct->CAN_Mode << 30) | ((u32)CAN_InitStruct->CAN_SJW << 24) |
               ((u32)CAN_InitStruct->CAN_BS1 << 16) | ((u32)CAN_InitStruct->CAN_BS2 << 20) |
  d0:	431a      	orrs	r2, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:195
    {
      CAN->MCR &= ~MCR_TXFP;
    }

    /* Set the bit timing register */
    CAN->BTR = (u32)((u32)CAN_InitStruct->CAN_Mode << 30) | ((u32)CAN_InitStruct->CAN_SJW << 24) |
  d2:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  d6:	f2c4 0300 	movt	r3, #16384	; 0x4000
  da:	61da      	str	r2, [r3, #28]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:202
               ((u32)CAN_InitStruct->CAN_Prescaler - 1);

    InitStatus = CANINITOK;

    /* Request leave initialisation */
    CAN->MCR &= ~MCR_INRQ;
  dc:	681a      	ldr	r2, [r3, #0]
  de:	f022 0201 	bic.w	r2, r2, #1
  e2:	601a      	str	r2, [r3, #0]
  e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
  e8:	f103 33ff 	add.w	r3, r3, #4294967295
  ec:	b29b      	uxth	r3, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:205

    /* Wait the acknowledge */
    for(WaitAck = 0x400; WaitAck > 0x0; WaitAck--)
  ee:	2b00      	cmp	r3, #0
  f0:	d1fa      	bne.n	e8 <CAN_Init+0xe8>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:210
    {
    }
    
    /* ...and check acknowledged */
    if ((CAN->MSR & MSR_INAK) == MSR_INAK)
  f2:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  f6:	f2c4 0300 	movt	r3, #16384	; 0x4000
  fa:	685b      	ldr	r3, [r3, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:130
  CAN->MCR = MCR_INRQ;

  /* ...and check acknowledged */
  if ((CAN->MSR & MSR_INAK) == 0)
  {
    InitStatus = CANINITFAILED;
  fc:	f013 0f01 	tst.w	r3, #1
 100:	bf14      	ite	ne
 102:	2000      	movne	r0, #0
 104:	2001      	moveq	r0, #1
 106:	4770      	bx	lr
 108:	f04f 0000 	mov.w	r0, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:218
    }
  }

  /* At this step, return the status of initialization */
  return InitStatus;
}
 10c:	4770      	bx	lr
 10e:	bf00      	nop

Disassembly of section .text.CAN_FilterInit:

00000000 <CAN_FilterInit>:
CAN_FilterInit():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:230
*                  structure that contains the configuration information.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
{
   0:	b470      	push	{r4, r5, r6}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:241
  assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
  assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
  assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));

  FilterNumber_BitPos = 
  (u16)(((u16)0x0001) << ((u16)CAN_FilterInitStruct->CAN_FilterNumber));
   2:	7803      	ldrb	r3, [r0, #0]
   4:	f04f 0101 	mov.w	r1, #1
   8:	fa01 f103 	lsl.w	r1, r1, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:240
  assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
  assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
  assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
  assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));

  FilterNumber_BitPos = 
   c:	b289      	uxth	r1, r1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:244
  (u16)(((u16)0x0001) << ((u16)CAN_FilterInitStruct->CAN_FilterNumber));

  /* Initialisation mode for the filter */
  CAN->FMR |= FMR_FINIT;
   e:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  12:	f2c4 0300 	movt	r3, #16384	; 0x4000
  16:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
  1a:	f042 0201 	orr.w	r2, r2, #1
  1e:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:247

  /* Filter Deactivation */
  CAN->FA1R &= ~(u32)FilterNumber_BitPos;
  22:	f8d3 421c 	ldr.w	r4, [r3, #540]	; 0x21c
  26:	ea6f 0201 	mvn.w	r2, r1
  2a:	ea02 0404 	and.w	r4, r2, r4
  2e:	f8c3 421c 	str.w	r4, [r3, #540]	; 0x21c
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:250

  /* Filter Scale */
  if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
  32:	7883      	ldrb	r3, [r0, #2]
  34:	b9e3      	cbnz	r3, 70 <CAN_FilterInit+0x70>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:253
  {
    /* 16-bit scale for the filter */
    CAN->FS1R &= ~(u32)FilterNumber_BitPos;
  36:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  3a:	f2c4 0300 	movt	r3, #16384	; 0x4000
  3e:	f8d3 420c 	ldr.w	r4, [r3, #524]	; 0x20c
  42:	ea02 0404 	and.w	r4, r2, r4
  46:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:257

    /* First 16-bit identifier and First 16-bit mask */
    /* Or First 16-bit identifier and Second 16-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
  4a:	7804      	ldrb	r4, [r0, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:258
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
  4c:	8946      	ldrh	r6, [r0, #10]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:259
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdLow);
  4e:	88c5      	ldrh	r5, [r0, #6]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:258
    CAN->FS1R &= ~(u32)FilterNumber_BitPos;

    /* First 16-bit identifier and First 16-bit mask */
    /* Or First 16-bit identifier and Second 16-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
  50:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:257
    /* 16-bit scale for the filter */
    CAN->FS1R &= ~(u32)FilterNumber_BitPos;

    /* First 16-bit identifier and First 16-bit mask */
    /* Or First 16-bit identifier and Second 16-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
  54:	f104 0448 	add.w	r4, r4, #72	; 0x48
  58:	f843 5034 	str.w	r5, [r3, r4, lsl #3]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:263
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdLow);

    /* Second 16-bit identifier and Second 16-bit mask */
    /* Or Third 16-bit identifier and Fourth 16-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
  5c:	7805      	ldrb	r5, [r0, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:264
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
  5e:	8906      	ldrh	r6, [r0, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:265
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdHigh);
  60:	8884      	ldrh	r4, [r0, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:264
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdLow);

    /* Second 16-bit identifier and Second 16-bit mask */
    /* Or Third 16-bit identifier and Fourth 16-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
  62:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:263
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdLow);

    /* Second 16-bit identifier and Second 16-bit mask */
    /* Or Third 16-bit identifier and Fourth 16-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
  66:	f105 0548 	add.w	r5, r5, #72	; 0x48
  6a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  6e:	605c      	str	r4, [r3, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:267
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdHigh);
  }
  if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
  70:	7883      	ldrb	r3, [r0, #2]
  72:	2b01      	cmp	r3, #1
  74:	d11c      	bne.n	b0 <CAN_FilterInit+0xb0>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:270
  {
    /* 32-bit scale for the filter */
    CAN->FS1R |= FilterNumber_BitPos;
  76:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  7a:	f2c4 0300 	movt	r3, #16384	; 0x4000
  7e:	f8d3 420c 	ldr.w	r4, [r3, #524]	; 0x20c
  82:	ea41 0404 	orr.w	r4, r1, r4
  86:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:273

    /* 32-bit identifier or First 32-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
  8a:	7804      	ldrb	r4, [r0, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:274
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
  8c:	8886      	ldrh	r6, [r0, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:275
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdLow);
  8e:	88c5      	ldrh	r5, [r0, #6]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:274
    /* 32-bit scale for the filter */
    CAN->FS1R |= FilterNumber_BitPos;

    /* 32-bit identifier or First 32-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
  90:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:273
  {
    /* 32-bit scale for the filter */
    CAN->FS1R |= FilterNumber_BitPos;

    /* 32-bit identifier or First 32-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
  94:	f104 0448 	add.w	r4, r4, #72	; 0x48
  98:	f843 5034 	str.w	r5, [r3, r4, lsl #3]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:278
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdLow);

    /* 32-bit mask or Second 32-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
  9c:	7805      	ldrb	r5, [r0, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:279
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
  9e:	8906      	ldrh	r6, [r0, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:280
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdLow);
  a0:	8944      	ldrh	r4, [r0, #10]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:279
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdLow);

    /* 32-bit mask or Second 32-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
  a2:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:278
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
    ((u32)((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterIdLow);

    /* 32-bit mask or Second 32-bit identifier */
    CAN->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
  a6:	f105 0548 	add.w	r5, r5, #72	; 0x48
  aa:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  ae:	605c      	str	r4, [r3, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:285
        ((u32)0x0000FFFF & CAN_FilterInitStruct->CAN_FilterMaskIdLow);

  }

  /* Filter Mode */
  if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
  b0:	7843      	ldrb	r3, [r0, #1]
  b2:	b953      	cbnz	r3, ca <CAN_FilterInit+0xca>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:288
  {
    /*Id/Mask mode for the filter*/
    CAN->FM1R &= ~(u32)FilterNumber_BitPos;
  b4:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  b8:	f2c4 0300 	movt	r3, #16384	; 0x4000
  bc:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
  c0:	ea02 0404 	and.w	r4, r2, r4
  c4:	f8c3 4204 	str.w	r4, [r3, #516]	; 0x204
  c8:	e009      	b.n	de <CAN_FilterInit+0xde>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:293
  }
  else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
  {
    /*Identifier list mode for the filter*/
    CAN->FM1R |= (u32)FilterNumber_BitPos;
  ca:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  ce:	f2c4 0300 	movt	r3, #16384	; 0x4000
  d2:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
  d6:	ea41 0404 	orr.w	r4, r1, r4
  da:	f8c3 4204 	str.w	r4, [r3, #516]	; 0x204
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:297
  }

  /* Filter FIFO assignment */
  if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_FilterFIFO0)
  de:	8983      	ldrh	r3, [r0, #12]
  e0:	b943      	cbnz	r3, f4 <CAN_FilterInit+0xf4>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:300
  {
    /* FIFO 0 assignation for the filter */
    CAN->FFA1R &= ~(u32)FilterNumber_BitPos;
  e2:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  e6:	f2c4 0300 	movt	r3, #16384	; 0x4000
  ea:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
  ee:	4022      	ands	r2, r4
  f0:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:302
  }
  if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_FilterFIFO1)
  f4:	8983      	ldrh	r3, [r0, #12]
  f6:	2b01      	cmp	r3, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:305
  {
    /* FIFO 1 assignation for the filter */
    CAN->FFA1R |= (u32)FilterNumber_BitPos;
  f8:	bf01      	itttt	eq
  fa:	f44f 43c8 	moveq.w	r3, #25600	; 0x6400
  fe:	f2c4 0300 	movteq	r3, #16384	; 0x4000
 102:	f8d3 2214 	ldreq.w	r2, [r3, #532]	; 0x214
 106:	430a      	orreq	r2, r1
 108:	bf08      	it	eq
 10a:	f8c3 2214 	streq.w	r2, [r3, #532]	; 0x214
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:309
  }
  
  /* Filter activation */
  if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 10e:	7b83      	ldrb	r3, [r0, #14]
 110:	2b01      	cmp	r3, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:311
  {
    CAN->FA1R |= FilterNumber_BitPos;
 112:	bf01      	itttt	eq
 114:	f44f 43c8 	moveq.w	r3, #25600	; 0x6400
 118:	f2c4 0300 	movteq	r3, #16384	; 0x4000
 11c:	f8d3 221c 	ldreq.w	r2, [r3, #540]	; 0x21c
 120:	4311      	orreq	r1, r2
 122:	bf08      	it	eq
 124:	f8c3 121c 	streq.w	r1, [r3, #540]	; 0x21c
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:315
  }

  /* Leave the initialisation mode for the filter */
  CAN->FMR &= ~FMR_FINIT;
 128:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
 12c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 130:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 134:	f022 0201 	bic.w	r2, r2, #1
 138:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:316
}
 13c:	bc70      	pop	{r4, r5, r6}
 13e:	4770      	bx	lr

Disassembly of section .text.CAN_StructInit:

00000000 <CAN_StructInit>:
CAN_StructInit():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:331
void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
{
  /* Reset CAN init structure parameters values */

  /* Initialize the time triggered communication mode */
  CAN_InitStruct->CAN_TTCM = DISABLE;
   0:	f04f 0300 	mov.w	r3, #0
   4:	7003      	strb	r3, [r0, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:334

  /* Initialize the automatic bus-off management */
  CAN_InitStruct->CAN_ABOM = DISABLE;
   6:	7043      	strb	r3, [r0, #1]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:337

  /* Initialize the automatic wake-up mode */
  CAN_InitStruct->CAN_AWUM = DISABLE;
   8:	7083      	strb	r3, [r0, #2]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:340

  /* Initialize the no automatic retransmission */
  CAN_InitStruct->CAN_NART = DISABLE;
   a:	70c3      	strb	r3, [r0, #3]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:343

  /* Initialize the receive FIFO locked mode */
  CAN_InitStruct->CAN_RFLM = DISABLE;
   c:	7103      	strb	r3, [r0, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:346

  /* Initialize the transmit FIFO priority */
  CAN_InitStruct->CAN_TXFP = DISABLE;
   e:	7143      	strb	r3, [r0, #5]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:349

  /* Initialize the CAN_Mode member */
  CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
  10:	7183      	strb	r3, [r0, #6]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:352

  /* Initialize the CAN_SJW member */
  CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
  12:	71c3      	strb	r3, [r0, #7]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:355

  /* Initialize the CAN_BS1 member */
  CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
  14:	f04f 0303 	mov.w	r3, #3
  18:	7203      	strb	r3, [r0, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:358

  /* Initialize the CAN_BS2 member */
  CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
  1a:	f04f 0302 	mov.w	r3, #2
  1e:	7243      	strb	r3, [r0, #9]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:361

  /* Initialize the CAN_Prescaler member */
  CAN_InitStruct->CAN_Prescaler = 1;
  20:	f04f 0301 	mov.w	r3, #1
  24:	8143      	strh	r3, [r0, #10]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:362
}
  26:	4770      	bx	lr

Disassembly of section .text.CAN_ITConfig:

00000000 <CAN_ITConfig>:
CAN_ITConfig():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:385
{
  /* Check the parameters */
  assert_param(IS_CAN_ITConfig(CAN_IT));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b139      	cbz	r1, 12 <CAN_ITConfig+0x12>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:388
  {
    /* Enable the selected CAN interrupt */
    CAN->IER |= CAN_IT;
   2:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
   6:	f2c4 0300 	movt	r3, #16384	; 0x4000
   a:	695a      	ldr	r2, [r3, #20]
   c:	4310      	orrs	r0, r2
   e:	6158      	str	r0, [r3, #20]
  10:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:393
  }
  else
  {
    /* Disable the selected CAN interrupt */
    CAN->IER &= ~CAN_IT;
  12:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  16:	f2c4 0300 	movt	r3, #16384	; 0x4000
  1a:	695a      	ldr	r2, [r3, #20]
  1c:	ea22 0000 	bic.w	r0, r2, r0
  20:	6158      	str	r0, [r3, #20]
  22:	4770      	bx	lr

Disassembly of section .text.CAN_Transmit:

00000000 <CAN_Transmit>:
CAN_Transmit():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:407
* Output         : None.
* Return         : The number of the mailbox that is used for transmission
*                  or CAN_NO_MB if there is no empty mailbox.
*******************************************************************************/
u8 CAN_Transmit(CanTxMsg* TxMessage)
{
   0:	b4f0      	push	{r4, r5, r6, r7}
   2:	4603      	mov	r3, r0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:418
  assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
  assert_param(IS_CAN_RTR(TxMessage->RTR));
  assert_param(IS_CAN_DLC(TxMessage->DLC));

  /* Select one empty transmit mailbox */
  if ((CAN->TSR&TSR_TME0) == TSR_TME0)
   4:	f44f 42c8 	mov.w	r2, #25600	; 0x6400
   8:	f2c4 0200 	movt	r2, #16384	; 0x4000
   c:	6892      	ldr	r2, [r2, #8]
   e:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:420
  {
    TransmitMailbox = 0;
  12:	bf18      	it	ne
  14:	2000      	movne	r0, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:418
  assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
  assert_param(IS_CAN_RTR(TxMessage->RTR));
  assert_param(IS_CAN_DLC(TxMessage->DLC));

  /* Select one empty transmit mailbox */
  if ((CAN->TSR&TSR_TME0) == TSR_TME0)
  16:	d114      	bne.n	42 <CAN_Transmit+0x42>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:422
  {
    TransmitMailbox = 0;
  }
  else if ((CAN->TSR&TSR_TME1) == TSR_TME1)
  18:	f44f 42c8 	mov.w	r2, #25600	; 0x6400
  1c:	f2c4 0200 	movt	r2, #16384	; 0x4000
  20:	6892      	ldr	r2, [r2, #8]
  22:	f012 6f00 	tst.w	r2, #134217728	; 0x8000000
  26:	d10a      	bne.n	3e <CAN_Transmit+0x3e>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:426
  {
    TransmitMailbox = 1;
  }
  else if ((CAN->TSR&TSR_TME2) == TSR_TME2)
  28:	f44f 42c8 	mov.w	r2, #25600	; 0x6400
  2c:	f2c4 0200 	movt	r2, #16384	; 0x4000
  30:	6892      	ldr	r2, [r2, #8]
  32:	f012 5f80 	tst.w	r2, #268435456	; 0x10000000
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:428
  {
    TransmitMailbox = 2;
  36:	bf18      	it	ne
  38:	2002      	movne	r0, #2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:426
  }
  else if ((CAN->TSR&TSR_TME1) == TSR_TME1)
  {
    TransmitMailbox = 1;
  }
  else if ((CAN->TSR&TSR_TME2) == TSR_TME2)
  3a:	d072      	beq.n	122 <CAN_Transmit+0x122>
  3c:	e001      	b.n	42 <CAN_Transmit+0x42>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:424
  {
    TransmitMailbox = 0;
  }
  else if ((CAN->TSR&TSR_TME1) == TSR_TME1)
  {
    TransmitMailbox = 1;
  3e:	f04f 0001 	mov.w	r0, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:438
  }

  if (TransmitMailbox != CAN_NO_MB)
  {
    /* Set up the Id */
    CAN->sTxMailBox[TransmitMailbox].TIR &= TMIDxR_TXRQ;
  42:	4605      	mov	r5, r0
  44:	f44f 42c8 	mov.w	r2, #25600	; 0x6400
  48:	f2c4 0200 	movt	r2, #16384	; 0x4000
  4c:	f100 0118 	add.w	r1, r0, #24
  50:	ea4f 1101 	mov.w	r1, r1, lsl #4
  54:	5854      	ldr	r4, [r2, r1]
  56:	f004 0401 	and.w	r4, r4, #1
  5a:	5054      	str	r4, [r2, r1]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:439
    if (TxMessage->IDE == CAN_ID_STD)
  5c:	7a19      	ldrb	r1, [r3, #8]
  5e:	b999      	cbnz	r1, 88 <CAN_Transmit+0x88>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:441
    {
      TxMessage->StdId &= (u32)0x000007FF;
  60:	681c      	ldr	r4, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:442
      TxMessage->StdId = TxMessage->StdId << 21;
  62:	ea4f 5444 	mov.w	r4, r4, lsl #21
  66:	601c      	str	r4, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:444
      
      CAN->sTxMailBox[TransmitMailbox].TIR |= (TxMessage->StdId | TxMessage->IDE |
  68:	f44f 42c8 	mov.w	r2, #25600	; 0x6400
  6c:	f2c4 0200 	movt	r2, #16384	; 0x4000
  70:	f100 0118 	add.w	r1, r0, #24
  74:	ea4f 1101 	mov.w	r1, r1, lsl #4
  78:	5856      	ldr	r6, [r2, r1]
  7a:	7a5f      	ldrb	r7, [r3, #9]
  7c:	ea47 0606 	orr.w	r6, r7, r6
  80:	ea46 0404 	orr.w	r4, r6, r4
  84:	5054      	str	r4, [r2, r1]
  86:	e014      	b.n	b2 <CAN_Transmit+0xb2>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:449
                                               TxMessage->RTR);
    }
    else
    {
      TxMessage->ExtId &= (u32)0x1FFFFFFF;
  88:	685e      	ldr	r6, [r3, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:450
      TxMessage->ExtId <<= 3;
  8a:	ea4f 06c6 	mov.w	r6, r6, lsl #3
  8e:	605e      	str	r6, [r3, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:452

      CAN->sTxMailBox[TransmitMailbox].TIR |= (TxMessage->ExtId | TxMessage->IDE | 
  90:	f44f 42c8 	mov.w	r2, #25600	; 0x6400
  94:	f2c4 0200 	movt	r2, #16384	; 0x4000
  98:	f100 0418 	add.w	r4, r0, #24
  9c:	ea4f 1404 	mov.w	r4, r4, lsl #4
  a0:	5917      	ldr	r7, [r2, r4]
  a2:	f893 c009 	ldrb.w	ip, [r3, #9]
  a6:	ea41 010c 	orr.w	r1, r1, ip
  aa:	4339      	orrs	r1, r7
  ac:	ea41 0606 	orr.w	r6, r1, r6
  b0:	5116      	str	r6, [r2, r4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:457
                                               TxMessage->RTR);
    }
    
    /* Set up the DLC */
    TxMessage->DLC &= (u8)0x0000000F;
  b2:	7a9a      	ldrb	r2, [r3, #10]
  b4:	f002 020f 	and.w	r2, r2, #15
  b8:	729a      	strb	r2, [r3, #10]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:458
    CAN->sTxMailBox[TransmitMailbox].TDTR &= (u32)0xFFFFFFF0;
  ba:	f44f 42c8 	mov.w	r2, #25600	; 0x6400
  be:	f2c4 0200 	movt	r2, #16384	; 0x4000
  c2:	f105 0418 	add.w	r4, r5, #24
  c6:	ea4f 1404 	mov.w	r4, r4, lsl #4
  ca:	1911      	adds	r1, r2, r4
  cc:	684e      	ldr	r6, [r1, #4]
  ce:	f026 060f 	bic.w	r6, r6, #15
  d2:	604e      	str	r6, [r1, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:459
    CAN->sTxMailBox[TransmitMailbox].TDTR |= TxMessage->DLC;
  d4:	684e      	ldr	r6, [r1, #4]
  d6:	7a9f      	ldrb	r7, [r3, #10]
  d8:	ea47 0606 	orr.w	r6, r7, r6
  dc:	604e      	str	r6, [r1, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:462

    /* Set up the data field */
    CAN->sTxMailBox[TransmitMailbox].TDLR = (((u32)TxMessage->Data[3] << 24) | 
  de:	7b99      	ldrb	r1, [r3, #14]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:463
                                             ((u32)TxMessage->Data[2] << 16) |
  e0:	7b5e      	ldrb	r6, [r3, #13]
  e2:	ea4f 4606 	mov.w	r6, r6, lsl #16
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:462
    TxMessage->DLC &= (u8)0x0000000F;
    CAN->sTxMailBox[TransmitMailbox].TDTR &= (u32)0xFFFFFFF0;
    CAN->sTxMailBox[TransmitMailbox].TDTR |= TxMessage->DLC;

    /* Set up the data field */
    CAN->sTxMailBox[TransmitMailbox].TDLR = (((u32)TxMessage->Data[3] << 24) | 
  e6:	ea46 6601 	orr.w	r6, r6, r1, lsl #24
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:465
                                             ((u32)TxMessage->Data[2] << 16) |
                                             ((u32)TxMessage->Data[1] << 8) | 
                                             ((u32)TxMessage->Data[0]));
  ea:	7ad9      	ldrb	r1, [r3, #11]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:463
    CAN->sTxMailBox[TransmitMailbox].TDTR &= (u32)0xFFFFFFF0;
    CAN->sTxMailBox[TransmitMailbox].TDTR |= TxMessage->DLC;

    /* Set up the data field */
    CAN->sTxMailBox[TransmitMailbox].TDLR = (((u32)TxMessage->Data[3] << 24) | 
                                             ((u32)TxMessage->Data[2] << 16) |
  ec:	430e      	orrs	r6, r1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:464
                                             ((u32)TxMessage->Data[1] << 8) | 
  ee:	7b19      	ldrb	r1, [r3, #12]
  f0:	ea46 2601 	orr.w	r6, r6, r1, lsl #8
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:462
    TxMessage->DLC &= (u8)0x0000000F;
    CAN->sTxMailBox[TransmitMailbox].TDTR &= (u32)0xFFFFFFF0;
    CAN->sTxMailBox[TransmitMailbox].TDTR |= TxMessage->DLC;

    /* Set up the data field */
    CAN->sTxMailBox[TransmitMailbox].TDLR = (((u32)TxMessage->Data[3] << 24) | 
  f4:	eb02 1105 	add.w	r1, r2, r5, lsl #4
  f8:	f501 75c4 	add.w	r5, r1, #392	; 0x188
  fc:	f8c1 6188 	str.w	r6, [r1, #392]	; 0x188
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:466
                                             ((u32)TxMessage->Data[2] << 16) |
                                             ((u32)TxMessage->Data[1] << 8) | 
                                             ((u32)TxMessage->Data[0]));
    CAN->sTxMailBox[TransmitMailbox].TDHR = (((u32)TxMessage->Data[7] << 24) | 
 100:	7c9e      	ldrb	r6, [r3, #18]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:467
                                             ((u32)TxMessage->Data[6] << 16) |
 102:	7c59      	ldrb	r1, [r3, #17]
 104:	ea4f 4101 	mov.w	r1, r1, lsl #16
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:466
    /* Set up the data field */
    CAN->sTxMailBox[TransmitMailbox].TDLR = (((u32)TxMessage->Data[3] << 24) | 
                                             ((u32)TxMessage->Data[2] << 16) |
                                             ((u32)TxMessage->Data[1] << 8) | 
                                             ((u32)TxMessage->Data[0]));
    CAN->sTxMailBox[TransmitMailbox].TDHR = (((u32)TxMessage->Data[7] << 24) | 
 108:	ea41 6106 	orr.w	r1, r1, r6, lsl #24
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:469
                                             ((u32)TxMessage->Data[6] << 16) |
                                             ((u32)TxMessage->Data[5] << 8) |
                                             ((u32)TxMessage->Data[4]));
 10c:	7bde      	ldrb	r6, [r3, #15]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:467
    CAN->sTxMailBox[TransmitMailbox].TDLR = (((u32)TxMessage->Data[3] << 24) | 
                                             ((u32)TxMessage->Data[2] << 16) |
                                             ((u32)TxMessage->Data[1] << 8) | 
                                             ((u32)TxMessage->Data[0]));
    CAN->sTxMailBox[TransmitMailbox].TDHR = (((u32)TxMessage->Data[7] << 24) | 
                                             ((u32)TxMessage->Data[6] << 16) |
 10e:	4331      	orrs	r1, r6
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:468
                                             ((u32)TxMessage->Data[5] << 8) |
 110:	7c1b      	ldrb	r3, [r3, #16]
 112:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:466
    /* Set up the data field */
    CAN->sTxMailBox[TransmitMailbox].TDLR = (((u32)TxMessage->Data[3] << 24) | 
                                             ((u32)TxMessage->Data[2] << 16) |
                                             ((u32)TxMessage->Data[1] << 8) | 
                                             ((u32)TxMessage->Data[0]));
    CAN->sTxMailBox[TransmitMailbox].TDHR = (((u32)TxMessage->Data[7] << 24) | 
 116:	606b      	str	r3, [r5, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:472
                                             ((u32)TxMessage->Data[6] << 16) |
                                             ((u32)TxMessage->Data[5] << 8) |
                                             ((u32)TxMessage->Data[4]));

    /* Request transmission */
    CAN->sTxMailBox[TransmitMailbox].TIR |= TMIDxR_TXRQ;
 118:	5913      	ldr	r3, [r2, r4]
 11a:	f043 0301 	orr.w	r3, r3, #1
 11e:	5113      	str	r3, [r2, r4]
 120:	e001      	b.n	126 <CAN_Transmit+0x126>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:432
  {
    TransmitMailbox = 2;
  }
  else
  {
    TransmitMailbox = CAN_NO_MB;
 122:	f04f 0004 	mov.w	r0, #4
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:476
    /* Request transmission */
    CAN->sTxMailBox[TransmitMailbox].TIR |= TMIDxR_TXRQ;
  }

  return TransmitMailbox;
}
 126:	bcf0      	pop	{r4, r5, r6, r7}
 128:	4770      	bx	lr
 12a:	bf00      	nop

Disassembly of section .text.CAN_TransmitStatus:

00000000 <CAN_TransmitStatus>:
CAN_TransmitStatus():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:495
  u8 State = 0;

  /* Check the parameters */
  assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));

  switch (TransmitMailbox)
   0:	2801      	cmp	r0, #1
   2:	d016      	beq.n	32 <CAN_TransmitStatus+0x32>
   4:	b120      	cbz	r0, 10 <CAN_TransmitStatus+0x10>
   6:	2802      	cmp	r0, #2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:510
    case (2): State |= (u8)((CAN->TSR & TSR_RQCP2) >> 14);
      State |= (u8)((CAN->TSR & TSR_TXOK2) >> 16);
      State |= (u8)((CAN->TSR & TSR_TME2) >> 28);
      break;
    default:
      State = CANTXFAILED;
   8:	bf18      	it	ne
   a:	2000      	movne	r0, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:495
  u8 State = 0;

  /* Check the parameters */
  assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));

  switch (TransmitMailbox)
   c:	d136      	bne.n	7c <CAN_TransmitStatus+0x7c>
   e:	e023      	b.n	58 <CAN_TransmitStatus+0x58>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:497
  {
    case (0): State |= (u8)((CAN->TSR & TSR_RQCP0) << 2);
  10:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  14:	f2c4 0300 	movt	r3, #16384	; 0x4000
  18:	6898      	ldr	r0, [r3, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:498
      State |= (u8)((CAN->TSR & TSR_TXOK0) >> 0);
  1a:	689a      	ldr	r2, [r3, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:497
  /* Check the parameters */
  assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));

  switch (TransmitMailbox)
  {
    case (0): State |= (u8)((CAN->TSR & TSR_RQCP0) << 2);
  1c:	f000 0001 	and.w	r0, r0, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:498
      State |= (u8)((CAN->TSR & TSR_TXOK0) >> 0);
  20:	f002 0202 	and.w	r2, r2, #2
  24:	ea42 0080 	orr.w	r0, r2, r0, lsl #2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:499
      State |= (u8)((CAN->TSR & TSR_TME0) >> 26);
  28:	689b      	ldr	r3, [r3, #8]
  2a:	f3c3 6380 	ubfx	r3, r3, #26, #1
  2e:	4318      	orrs	r0, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:500
      break;
  30:	e024      	b.n	7c <CAN_TransmitStatus+0x7c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:501
    case (1): State |= (u8)((CAN->TSR & TSR_RQCP1) >> 6);
  32:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  36:	f2c4 0300 	movt	r3, #16384	; 0x4000
  3a:	689a      	ldr	r2, [r3, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:502
      State |= (u8)((CAN->TSR & TSR_TXOK1) >> 8);
  3c:	6898      	ldr	r0, [r3, #8]
  3e:	f400 7000 	and.w	r0, r0, #512	; 0x200
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:501
  {
    case (0): State |= (u8)((CAN->TSR & TSR_RQCP0) << 2);
      State |= (u8)((CAN->TSR & TSR_TXOK0) >> 0);
      State |= (u8)((CAN->TSR & TSR_TME0) >> 26);
      break;
    case (1): State |= (u8)((CAN->TSR & TSR_RQCP1) >> 6);
  42:	f402 7280 	and.w	r2, r2, #256	; 0x100
  46:	ea4f 1292 	mov.w	r2, r2, lsr #6
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:502
      State |= (u8)((CAN->TSR & TSR_TXOK1) >> 8);
  4a:	ea42 2010 	orr.w	r0, r2, r0, lsr #8
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:503
      State |= (u8)((CAN->TSR & TSR_TME1) >> 27);
  4e:	689b      	ldr	r3, [r3, #8]
  50:	f3c3 63c0 	ubfx	r3, r3, #27, #1
  54:	4318      	orrs	r0, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:504
      break;
  56:	e011      	b.n	7c <CAN_TransmitStatus+0x7c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:505
    case (2): State |= (u8)((CAN->TSR & TSR_RQCP2) >> 14);
  58:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  5c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  60:	689a      	ldr	r2, [r3, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:506
      State |= (u8)((CAN->TSR & TSR_TXOK2) >> 16);
  62:	6898      	ldr	r0, [r3, #8]
  64:	f400 3000 	and.w	r0, r0, #131072	; 0x20000
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:505
      break;
    case (1): State |= (u8)((CAN->TSR & TSR_RQCP1) >> 6);
      State |= (u8)((CAN->TSR & TSR_TXOK1) >> 8);
      State |= (u8)((CAN->TSR & TSR_TME1) >> 27);
      break;
    case (2): State |= (u8)((CAN->TSR & TSR_RQCP2) >> 14);
  68:	f402 3280 	and.w	r2, r2, #65536	; 0x10000
  6c:	ea4f 3292 	mov.w	r2, r2, lsr #14
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:506
      State |= (u8)((CAN->TSR & TSR_TXOK2) >> 16);
  70:	ea42 4010 	orr.w	r0, r2, r0, lsr #16
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:507
      State |= (u8)((CAN->TSR & TSR_TME2) >> 28);
  74:	689b      	ldr	r3, [r3, #8]
  76:	f3c3 7300 	ubfx	r3, r3, #28, #1
  7a:	4318      	orrs	r0, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:514
    default:
      State = CANTXFAILED;
      break;
  }

  switch (State)
  7c:	b120      	cbz	r0, 88 <CAN_TransmitStatus+0x88>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:520
  {
      /* transmit pending  */
    case (0x0): State = CANTXPENDING;
      break;
      /* transmit failed  */
    case (0x5): State = CANTXFAILED;
  7e:	2807      	cmp	r0, #7
  80:	bf14      	ite	ne
  82:	2000      	movne	r0, #0
  84:	2001      	moveq	r0, #1
  86:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:517
  }

  switch (State)
  {
      /* transmit pending  */
    case (0x0): State = CANTXPENDING;
  88:	f04f 0002 	mov.w	r0, #2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:531
      State = CANTXFAILED;
      break;
  }

  return State;
}
  8c:	4770      	bx	lr
  8e:	bf00      	nop

Disassembly of section .text.CAN_CancelTransmit:

00000000 <CAN_CancelTransmit>:
CAN_CancelTransmit():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:546
{
  /* Check the parameters */
  assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));

  /* abort transmission */
  switch (Mailbox)
   0:	2801      	cmp	r0, #1
   2:	d00c      	beq.n	1e <CAN_CancelTransmit+0x1e>
   4:	b110      	cbz	r0, c <CAN_CancelTransmit+0xc>
   6:	2802      	cmp	r0, #2
   8:	d11a      	bne.n	40 <CAN_CancelTransmit+0x40>
   a:	e011      	b.n	30 <CAN_CancelTransmit+0x30>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:548
  {
    case (0): CAN->TSR |= TSR_ABRQ0;
   c:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  10:	f2c4 0300 	movt	r3, #16384	; 0x4000
  14:	689a      	ldr	r2, [r3, #8]
  16:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  1a:	609a      	str	r2, [r3, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:549
      break;
  1c:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:550
    case (1): CAN->TSR |= TSR_ABRQ1;
  1e:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  22:	f2c4 0300 	movt	r3, #16384	; 0x4000
  26:	689a      	ldr	r2, [r3, #8]
  28:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
  2c:	609a      	str	r2, [r3, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:551
      break;
  2e:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:552
    case (2): CAN->TSR |= TSR_ABRQ2;
  30:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  34:	f2c4 0300 	movt	r3, #16384	; 0x4000
  38:	689a      	ldr	r2, [r3, #8]
  3a:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
  3e:	609a      	str	r2, [r3, #8]
  40:	4770      	bx	lr
  42:	bf00      	nop

Disassembly of section .text.CAN_FIFORelease:

00000000 <CAN_FIFORelease>:
CAN_FIFORelease():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:572
{
  /* Check the parameters */
  assert_param(IS_CAN_FIFO(FIFONumber));

  /* Release FIFO0 */
  if (FIFONumber == CAN_FIFO0)
   0:	b938      	cbnz	r0, 12 <CAN_FIFORelease+0x12>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:574
  {
    CAN->RF0R = RF0R_RFOM0;
   2:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
   6:	f2c4 0300 	movt	r3, #16384	; 0x4000
   a:	f04f 0220 	mov.w	r2, #32
   e:	60da      	str	r2, [r3, #12]
  10:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:579
  }
  /* Release FIFO1 */
  else /* FIFONumber == CAN_FIFO1 */
  {
    CAN->RF1R = RF1R_RFOM1;
  12:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  16:	f2c4 0300 	movt	r3, #16384	; 0x4000
  1a:	f04f 0220 	mov.w	r2, #32
  1e:	611a      	str	r2, [r3, #16]
  20:	4770      	bx	lr
  22:	bf00      	nop

Disassembly of section .text.CAN_MessagePending:

00000000 <CAN_MessagePending>:
CAN_MessagePending():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:597
  u8 MessagePending=0;

  /* Check the parameters */
  assert_param(IS_CAN_FIFO(FIFONumber));

  if (FIFONumber == CAN_FIFO0)
   0:	4603      	mov	r3, r0
   2:	b938      	cbnz	r0, 14 <CAN_MessagePending+0x14>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:599
  {
    MessagePending = (u8)(CAN->RF0R&(u32)0x03);
   4:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
   8:	f2c4 0300 	movt	r3, #16384	; 0x4000
   c:	68d8      	ldr	r0, [r3, #12]
   e:	f000 0003 	and.w	r0, r0, #3
  12:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:601
  }
  else if (FIFONumber == CAN_FIFO1)
  14:	2801      	cmp	r0, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:603
  {
    MessagePending = (u8)(CAN->RF1R&(u32)0x03);
  16:	bf01      	itttt	eq
  18:	f44f 43c8 	moveq.w	r3, #25600	; 0x6400
  1c:	f2c4 0300 	movteq	r3, #16384	; 0x4000
  20:	6918      	ldreq	r0, [r3, #16]
  22:	f000 0003 	andeq.w	r0, r0, #3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:607
  }
  else
  {
    MessagePending = 0;
  26:	bf18      	it	ne
  28:	2000      	movne	r0, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:610
  }
  return MessagePending;
}
  2a:	4770      	bx	lr

Disassembly of section .text.CAN_Receive:

00000000 <CAN_Receive>:
CAN_Receive():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:621
* Output         : RxMessage: pointer to a structure which contains CAN Id,
*                  CAN DLC, CAN datas and FMI number.
* Return         : None.
*******************************************************************************/
void CAN_Receive(u8 FIFONumber, CanRxMsg* RxMessage)
{
   0:	b510      	push	{r4, lr}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:626
  /* Check the parameters */
  assert_param(IS_CAN_FIFO(FIFONumber));

  /* Get the Id */
  RxMessage->IDE = (u8)0x04 & CAN->sFIFOMailBox[FIFONumber].RIR;
   2:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
   6:	f2c4 0300 	movt	r3, #16384	; 0x4000
   a:	f100 021b 	add.w	r2, r0, #27
   e:	ea4f 1202 	mov.w	r2, r2, lsl #4
  12:	589b      	ldr	r3, [r3, r2]
  14:	f003 0304 	and.w	r3, r3, #4
  18:	b2db      	uxtb	r3, r3
  1a:	720b      	strb	r3, [r1, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:627
  if (RxMessage->IDE == CAN_ID_STD)
  1c:	b963      	cbnz	r3, 38 <CAN_Receive+0x38>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:629
  {
    RxMessage->StdId = (u32)0x000007FF & (CAN->sFIFOMailBox[FIFONumber].RIR >> 21);
  1e:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  22:	f2c4 0300 	movt	r3, #16384	; 0x4000
  26:	f100 021b 	add.w	r2, r0, #27
  2a:	ea4f 1202 	mov.w	r2, r2, lsl #4
  2e:	589b      	ldr	r3, [r3, r2]
  30:	ea4f 5353 	mov.w	r3, r3, lsr #21
  34:	600b      	str	r3, [r1, #0]
  36:	e00b      	b.n	50 <CAN_Receive+0x50>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:633
  }
  else
  {
    RxMessage->ExtId = (u32)0x1FFFFFFF & (CAN->sFIFOMailBox[FIFONumber].RIR >> 3);
  38:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  3c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  40:	f100 021b 	add.w	r2, r0, #27
  44:	ea4f 1202 	mov.w	r2, r2, lsl #4
  48:	589b      	ldr	r3, [r3, r2]
  4a:	ea4f 03d3 	mov.w	r3, r3, lsr #3
  4e:	604b      	str	r3, [r1, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:636
  }
  
  RxMessage->RTR = (u8)0x02 & CAN->sFIFOMailBox[FIFONumber].RIR;
  50:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  54:	f2c4 0300 	movt	r3, #16384	; 0x4000
  58:	f100 041b 	add.w	r4, r0, #27
  5c:	ea4f 1404 	mov.w	r4, r4, lsl #4
  60:	191a      	adds	r2, r3, r4
  62:	591c      	ldr	r4, [r3, r4]
  64:	f004 0402 	and.w	r4, r4, #2
  68:	724c      	strb	r4, [r1, #9]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:639

  /* Get the DLC */
  RxMessage->DLC = (u8)0x0F & CAN->sFIFOMailBox[FIFONumber].RDTR;
  6a:	6854      	ldr	r4, [r2, #4]
  6c:	f004 040f 	and.w	r4, r4, #15
  70:	728c      	strb	r4, [r1, #10]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:642

  /* Get the FMI */
  RxMessage->FMI = (u8)0xFF & (CAN->sFIFOMailBox[FIFONumber].RDTR >> 8);
  72:	6852      	ldr	r2, [r2, #4]
  74:	ea4f 2212 	mov.w	r2, r2, lsr #8
  78:	74ca      	strb	r2, [r1, #19]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:645

  /* Get the data field */
  RxMessage->Data[0] = (u8)0xFF & CAN->sFIFOMailBox[FIFONumber].RDLR;
  7a:	eb03 1300 	add.w	r3, r3, r0, lsl #4
  7e:	f503 72dc 	add.w	r2, r3, #440	; 0x1b8
  82:	f8d3 41b8 	ldr.w	r4, [r3, #440]	; 0x1b8
  86:	72cc      	strb	r4, [r1, #11]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:646
  RxMessage->Data[1] = (u8)0xFF & (CAN->sFIFOMailBox[FIFONumber].RDLR >> 8);
  88:	f8d3 41b8 	ldr.w	r4, [r3, #440]	; 0x1b8
  8c:	ea4f 2414 	mov.w	r4, r4, lsr #8
  90:	730c      	strb	r4, [r1, #12]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:647
  RxMessage->Data[2] = (u8)0xFF & (CAN->sFIFOMailBox[FIFONumber].RDLR >> 16);
  92:	f8d3 41b8 	ldr.w	r4, [r3, #440]	; 0x1b8
  96:	ea4f 4414 	mov.w	r4, r4, lsr #16
  9a:	734c      	strb	r4, [r1, #13]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:648
  RxMessage->Data[3] = (u8)0xFF & (CAN->sFIFOMailBox[FIFONumber].RDLR >> 24);
  9c:	f8d3 31b8 	ldr.w	r3, [r3, #440]	; 0x1b8
  a0:	ea4f 6313 	mov.w	r3, r3, lsr #24
  a4:	738b      	strb	r3, [r1, #14]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:650

  RxMessage->Data[4] = (u8)0xFF & CAN->sFIFOMailBox[FIFONumber].RDHR;
  a6:	6853      	ldr	r3, [r2, #4]
  a8:	73cb      	strb	r3, [r1, #15]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:651
  RxMessage->Data[5] = (u8)0xFF & (CAN->sFIFOMailBox[FIFONumber].RDHR >> 8);
  aa:	6853      	ldr	r3, [r2, #4]
  ac:	ea4f 2313 	mov.w	r3, r3, lsr #8
  b0:	740b      	strb	r3, [r1, #16]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:652
  RxMessage->Data[6] = (u8)0xFF & (CAN->sFIFOMailBox[FIFONumber].RDHR >> 16);
  b2:	6853      	ldr	r3, [r2, #4]
  b4:	ea4f 4313 	mov.w	r3, r3, lsr #16
  b8:	744b      	strb	r3, [r1, #17]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:653
  RxMessage->Data[7] = (u8)0xFF & (CAN->sFIFOMailBox[FIFONumber].RDHR >> 24);
  ba:	6853      	ldr	r3, [r2, #4]
  bc:	ea4f 6313 	mov.w	r3, r3, lsr #24
  c0:	748b      	strb	r3, [r1, #18]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:656

  /* Release the FIFO */
  CAN_FIFORelease(FIFONumber);
  c2:	f7ff fffe 	bl	0 <CAN_Receive>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:657
}
  c6:	bd10      	pop	{r4, pc}

Disassembly of section .text.CAN_Sleep:

00000000 <CAN_Sleep>:
CAN_Sleep():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:671
u8 CAN_Sleep(void)
{
  u8 SleepStatus = 0;

  /* Sleep mode entering request */
  CAN->MCR |= MCR_SLEEP;
   0:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	681a      	ldr	r2, [r3, #0]
   a:	f042 0202 	orr.w	r2, r2, #2
   e:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:675
  SleepStatus = CANSLEEPOK;

  /* Sleep mode status */
  if ((CAN->MCR&MCR_SLEEP) == 0)
  10:	6818      	ldr	r0, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:683
    SleepStatus = CANSLEEPFAILED;
  }

  /* At this step, sleep mode status */
  return SleepStatus;
}
  12:	f3c0 0040 	ubfx	r0, r0, #1, #1
  16:	4770      	bx	lr

Disassembly of section .text.CAN_WakeUp:

00000000 <CAN_WakeUp>:
CAN_WakeUp():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:698
u8 CAN_WakeUp(void)
{
  u8 WakeUpStatus = 0;

  /* Wake up request */
  CAN->MCR &= ~MCR_SLEEP;
   0:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	681a      	ldr	r2, [r3, #0]
   a:	f022 0202 	bic.w	r2, r2, #2
   e:	601a      	str	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:702
  WakeUpStatus = CANWAKEUPFAILED;

  /* Sleep mode status */
  if ((CAN->MCR&MCR_SLEEP) == 0)
  10:	681b      	ldr	r3, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:699
{
  u8 WakeUpStatus = 0;

  /* Wake up request */
  CAN->MCR &= ~MCR_SLEEP;
  WakeUpStatus = CANWAKEUPFAILED;
  12:	f013 0f02 	tst.w	r3, #2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:710
    WakeUpStatus = CANWAKEUPOK;
  }

  /* At this step, sleep mode status */
  return WakeUpStatus;
}
  16:	bf14      	ite	ne
  18:	2000      	movne	r0, #0
  1a:	2001      	moveq	r0, #1
  1c:	4770      	bx	lr
  1e:	bf00      	nop

Disassembly of section .text.CAN_GetFlagStatus:

00000000 <CAN_GetFlagStatus>:
CAN_GetFlagStatus():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:729

  /* Check the parameters */
  assert_param(IS_CAN_FLAG(CAN_FLAG));

  /* Check the status of the specified CAN flag */
  if ((CAN->ESR & CAN_FLAG) != (u32)RESET)
   0:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	699b      	ldr	r3, [r3, #24]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:732
  {
    /* CAN_FLAG is set */
    bitstatus = SET;
   a:	4218      	tst	r0, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:741
    /* CAN_FLAG is reset */
    bitstatus = RESET;
  }
  /* Return the CAN_FLAG status */
  return  bitstatus;
}
   c:	bf0c      	ite	eq
   e:	2000      	moveq	r0, #0
  10:	2001      	movne	r0, #1
  12:	4770      	bx	lr

Disassembly of section .text.CAN_ClearFlag:

00000000 <CAN_ClearFlag>:
CAN_ClearFlag():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:756
{
  /* Check the parameters */
  assert_param(IS_CAN_FLAG(CAN_FLAG));

  /* Clear the selected CAN flags */
  CAN->ESR &= ~CAN_FLAG;
   0:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
   4:	f2c4 0300 	movt	r3, #16384	; 0x4000
   8:	699a      	ldr	r2, [r3, #24]
   a:	ea22 0200 	bic.w	r2, r2, r0
   e:	619a      	str	r2, [r3, #24]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:757
}
  10:	4770      	bx	lr
  12:	bf00      	nop

Disassembly of section .text.CAN_GetITStatus:

00000000 <CAN_GetITStatus>:
CAN_GetITStatus():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:772
*                                         CAN_IT_BOF, CAN_IT_WKU or CAN_IT_SLK.
* Output         : None.
* Return         : The new state of CAN_IT (SET or RESET).
*******************************************************************************/
ITStatus CAN_GetITStatus(u32 CAN_IT)
{
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:778
  ITStatus pendingbitstatus = RESET;

  /* Check the parameters */
  assert_param(IS_CAN_ITStatus(CAN_IT));

  switch (CAN_IT)
   2:	2820      	cmp	r0, #32
   4:	d056      	beq.n	b4 <CAN_GetITStatus+0xb4>
   6:	d80e      	bhi.n	26 <CAN_GetITStatus+0x26>
   8:	2806      	cmp	r0, #6
   a:	d02b      	beq.n	64 <CAN_GetITStatus+0x64>
   c:	d805      	bhi.n	1a <CAN_GetITStatus+0x1a>
   e:	2804      	cmp	r0, #4
  10:	d03c      	beq.n	8c <CAN_GetITStatus+0x8c>
  12:	2805      	cmp	r0, #5
  14:	f040 8094 	bne.w	140 <CAN_GetITStatus+0x140>
  18:	e01a      	b.n	50 <CAN_GetITStatus+0x50>
  1a:	2807      	cmp	r0, #7
  1c:	d02c      	beq.n	78 <CAN_GetITStatus+0x78>
  1e:	2808      	cmp	r0, #8
  20:	f040 808e 	bne.w	140 <CAN_GetITStatus+0x140>
  24:	e03c      	b.n	a0 <CAN_GetITStatus+0xa0>
  26:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
  2a:	d061      	beq.n	f0 <CAN_GetITStatus+0xf0>
  2c:	d806      	bhi.n	3c <CAN_GetITStatus+0x3c>
  2e:	2840      	cmp	r0, #64	; 0x40
  30:	d04a      	beq.n	c8 <CAN_GetITStatus+0xc8>
  32:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  36:	f040 8083 	bne.w	140 <CAN_GetITStatus+0x140>
  3a:	e04f      	b.n	dc <CAN_GetITStatus+0xdc>
  3c:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
  40:	d074      	beq.n	12c <CAN_GetITStatus+0x12c>
  42:	f5b0 3f00 	cmp.w	r0, #131072	; 0x20000
  46:	d067      	beq.n	118 <CAN_GetITStatus+0x118>
  48:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
  4c:	d178      	bne.n	140 <CAN_GetITStatus+0x140>
  4e:	e059      	b.n	104 <CAN_GetITStatus+0x104>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:781
  {
    case CAN_IT_RQCP0:
      pendingbitstatus = CheckITStatus(CAN->TSR, TSR_RQCP0);
  50:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  54:	f2c4 0300 	movt	r3, #16384	; 0x4000
  58:	6898      	ldr	r0, [r3, #8]
  5a:	f04f 0101 	mov.w	r1, #1
  5e:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:782
      break;
  62:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:784
    case CAN_IT_RQCP1:
      pendingbitstatus = CheckITStatus(CAN->TSR, TSR_RQCP1);
  64:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  68:	f2c4 0300 	movt	r3, #16384	; 0x4000
  6c:	6898      	ldr	r0, [r3, #8]
  6e:	f44f 7180 	mov.w	r1, #256	; 0x100
  72:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:785
      break;
  76:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:787
    case CAN_IT_RQCP2:
      pendingbitstatus = CheckITStatus(CAN->TSR, TSR_RQCP2);
  78:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  7c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  80:	6898      	ldr	r0, [r3, #8]
  82:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  86:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:788
      break;
  8a:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:790
    case CAN_IT_FF0:
      pendingbitstatus = CheckITStatus(CAN->RF0R, RF0R_FULL0);
  8c:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  90:	f2c4 0300 	movt	r3, #16384	; 0x4000
  94:	68d8      	ldr	r0, [r3, #12]
  96:	f04f 0108 	mov.w	r1, #8
  9a:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:791
      break;
  9e:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:793
    case CAN_IT_FOV0:
      pendingbitstatus = CheckITStatus(CAN->RF0R, RF0R_FOVR0);
  a0:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  a4:	f2c4 0300 	movt	r3, #16384	; 0x4000
  a8:	68d8      	ldr	r0, [r3, #12]
  aa:	f04f 0110 	mov.w	r1, #16
  ae:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:794
      break;
  b2:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:796
    case CAN_IT_FF1:
      pendingbitstatus = CheckITStatus(CAN->RF1R, RF1R_FULL1);
  b4:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  b8:	f2c4 0300 	movt	r3, #16384	; 0x4000
  bc:	6918      	ldr	r0, [r3, #16]
  be:	f04f 0108 	mov.w	r1, #8
  c2:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:797
      break;
  c6:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:799
    case CAN_IT_FOV1:
      pendingbitstatus = CheckITStatus(CAN->RF1R, RF1R_FOVR1);
  c8:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  cc:	f2c4 0300 	movt	r3, #16384	; 0x4000
  d0:	6918      	ldr	r0, [r3, #16]
  d2:	f04f 0110 	mov.w	r1, #16
  d6:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:800
      break;
  da:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:802
    case CAN_IT_EWG:
      pendingbitstatus = CheckITStatus(CAN->ESR, ESR_EWGF);
  dc:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  e0:	f2c4 0300 	movt	r3, #16384	; 0x4000
  e4:	6998      	ldr	r0, [r3, #24]
  e6:	f04f 0101 	mov.w	r1, #1
  ea:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:803
      break;
  ee:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:805
    case CAN_IT_EPV:
      pendingbitstatus = CheckITStatus(CAN->ESR, ESR_EPVF);
  f0:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  f4:	f2c4 0300 	movt	r3, #16384	; 0x4000
  f8:	6998      	ldr	r0, [r3, #24]
  fa:	f04f 0102 	mov.w	r1, #2
  fe:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:806
      break;
 102:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:808
    case CAN_IT_BOF:
      pendingbitstatus = CheckITStatus(CAN->ESR, ESR_BOFF);
 104:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
 108:	f2c4 0300 	movt	r3, #16384	; 0x4000
 10c:	6998      	ldr	r0, [r3, #24]
 10e:	f04f 0104 	mov.w	r1, #4
 112:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:809
      break;
 116:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:811
    case CAN_IT_SLK:
      pendingbitstatus = CheckITStatus(CAN->MSR, MSR_SLAKI);
 118:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
 11c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 120:	6858      	ldr	r0, [r3, #4]
 122:	f04f 0110 	mov.w	r1, #16
 126:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:812
      break;
 12a:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:814
    case CAN_IT_WKU:
      pendingbitstatus = CheckITStatus(CAN->MSR, MSR_WKUI);
 12c:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
 130:	f2c4 0300 	movt	r3, #16384	; 0x4000
 134:	6858      	ldr	r0, [r3, #4]
 136:	f04f 0108 	mov.w	r1, #8
 13a:	f7ff fffe 	bl	0 <CAN_GetITStatus>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:815
      break;
 13e:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:818

    default :
      pendingbitstatus = RESET;
 140:	f04f 0000 	mov.w	r0, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:824
      break;
  }

  /* Return the CAN_IT status */
  return  pendingbitstatus;
}
 144:	bd08      	pop	{r3, pc}
 146:	bf00      	nop

Disassembly of section .text.CAN_ClearITPendingBit:

00000000 <CAN_ClearITPendingBit>:
CAN_ClearITPendingBit():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:838
void CAN_ClearITPendingBit(u32 CAN_IT)
{
  /* Check the parameters */
  assert_param(IS_CAN_ITStatus(CAN_IT));

  switch (CAN_IT)
   0:	2820      	cmp	r0, #32
   2:	d049      	beq.n	98 <CAN_ClearITPendingBit+0x98>
   4:	d80c      	bhi.n	20 <CAN_ClearITPendingBit+0x20>
   6:	2806      	cmp	r0, #6
   8:	d026      	beq.n	58 <CAN_ClearITPendingBit+0x58>
   a:	d804      	bhi.n	16 <CAN_ClearITPendingBit+0x16>
   c:	2804      	cmp	r0, #4
   e:	d033      	beq.n	78 <CAN_ClearITPendingBit+0x78>
  10:	2805      	cmp	r0, #5
  12:	d17b      	bne.n	10c <CAN_ClearITPendingBit+0x10c>
  14:	e018      	b.n	48 <CAN_ClearITPendingBit+0x48>
  16:	2807      	cmp	r0, #7
  18:	d026      	beq.n	68 <CAN_ClearITPendingBit+0x68>
  1a:	2808      	cmp	r0, #8
  1c:	d176      	bne.n	10c <CAN_ClearITPendingBit+0x10c>
  1e:	e033      	b.n	88 <CAN_ClearITPendingBit+0x88>
  20:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
  24:	d051      	beq.n	ca <CAN_ClearITPendingBit+0xca>
  26:	d805      	bhi.n	34 <CAN_ClearITPendingBit+0x34>
  28:	2840      	cmp	r0, #64	; 0x40
  2a:	d03d      	beq.n	a8 <CAN_ClearITPendingBit+0xa8>
  2c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  30:	d16c      	bne.n	10c <CAN_ClearITPendingBit+0x10c>
  32:	e041      	b.n	b8 <CAN_ClearITPendingBit+0xb8>
  34:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
  38:	d059      	beq.n	ee <CAN_ClearITPendingBit+0xee>
  3a:	f5b0 3f00 	cmp.w	r0, #131072	; 0x20000
  3e:	d05e      	beq.n	fe <CAN_ClearITPendingBit+0xfe>
  40:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
  44:	d162      	bne.n	10c <CAN_ClearITPendingBit+0x10c>
  46:	e049      	b.n	dc <CAN_ClearITPendingBit+0xdc>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:841
  {
    case CAN_IT_RQCP0:
      CAN->TSR = TSR_RQCP0; /* rc_w1*/
  48:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  4c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  50:	f04f 0201 	mov.w	r2, #1
  54:	609a      	str	r2, [r3, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:842
      break;
  56:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:844
    case CAN_IT_RQCP1:
      CAN->TSR = TSR_RQCP1; /* rc_w1*/
  58:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  5c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  60:	f44f 7280 	mov.w	r2, #256	; 0x100
  64:	609a      	str	r2, [r3, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:845
      break;
  66:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:847
    case CAN_IT_RQCP2:
      CAN->TSR = TSR_RQCP2; /* rc_w1*/
  68:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  6c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  70:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  74:	609a      	str	r2, [r3, #8]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:848
      break;
  76:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:850
    case CAN_IT_FF0:
      CAN->RF0R = RF0R_FULL0; /* rc_w1*/
  78:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  7c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  80:	f04f 0208 	mov.w	r2, #8
  84:	60da      	str	r2, [r3, #12]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:851
      break;
  86:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:853
    case CAN_IT_FOV0:
      CAN->RF0R = RF0R_FOVR0; /* rc_w1*/
  88:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  8c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  90:	f04f 0210 	mov.w	r2, #16
  94:	60da      	str	r2, [r3, #12]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:854
      break;
  96:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:856
    case CAN_IT_FF1:
      CAN->RF1R = RF1R_FULL1; /* rc_w1*/
  98:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  9c:	f2c4 0300 	movt	r3, #16384	; 0x4000
  a0:	f04f 0208 	mov.w	r2, #8
  a4:	611a      	str	r2, [r3, #16]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:857
      break;
  a6:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:859
    case CAN_IT_FOV1:
      CAN->RF1R = RF1R_FOVR1; /* rc_w1*/
  a8:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  ac:	f2c4 0300 	movt	r3, #16384	; 0x4000
  b0:	f04f 0210 	mov.w	r2, #16
  b4:	611a      	str	r2, [r3, #16]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:860
      break;
  b6:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:862
    case CAN_IT_EWG:
      CAN->ESR &= ~ ESR_EWGF; /* rw */
  b8:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  bc:	f2c4 0300 	movt	r3, #16384	; 0x4000
  c0:	699a      	ldr	r2, [r3, #24]
  c2:	f022 0201 	bic.w	r2, r2, #1
  c6:	619a      	str	r2, [r3, #24]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:863
      break;
  c8:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:865
    case CAN_IT_EPV:
      CAN->ESR &= ~ ESR_EPVF; /* rw */
  ca:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  ce:	f2c4 0300 	movt	r3, #16384	; 0x4000
  d2:	699a      	ldr	r2, [r3, #24]
  d4:	f022 0202 	bic.w	r2, r2, #2
  d8:	619a      	str	r2, [r3, #24]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:866
      break;
  da:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:868
    case CAN_IT_BOF:
      CAN->ESR &= ~ ESR_BOFF; /* rw */
  dc:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  e0:	f2c4 0300 	movt	r3, #16384	; 0x4000
  e4:	699a      	ldr	r2, [r3, #24]
  e6:	f022 0204 	bic.w	r2, r2, #4
  ea:	619a      	str	r2, [r3, #24]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:869
      break;
  ec:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:871
    case CAN_IT_WKU:
      CAN->MSR = MSR_WKUI;  /* rc_w1*/
  ee:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
  f2:	f2c4 0300 	movt	r3, #16384	; 0x4000
  f6:	f04f 0208 	mov.w	r2, #8
  fa:	605a      	str	r2, [r3, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:872
      break;
  fc:	4770      	bx	lr
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/stm32f10x_can.c:874
    case CAN_IT_SLK:
      CAN->MSR = MSR_SLAKI;  /* rc_w1*/
  fe:	f44f 43c8 	mov.w	r3, #25600	; 0x6400
 102:	f2c4 0300 	movt	r3, #16384	; 0x4000
 106:	f04f 0210 	mov.w	r2, #16
 10a:	605a      	str	r2, [r3, #4]
 10c:	4770      	bx	lr
 10e:	bf00      	nop
