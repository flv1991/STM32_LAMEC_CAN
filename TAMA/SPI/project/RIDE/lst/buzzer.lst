
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\project\RIDE\obj\buzzer.o:     file format elf32-littlearm
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\project\RIDE\obj\buzzer.o


Disassembly of section .text.BUZZER_SetFrequency:

00000000 <BUZZER_SetFrequency>:
BUZZER_SetFrequency():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:195
*  @param[in]  freq New frequency.
*
**/
/********************************************************************************/
void BUZZER_SetFrequency ( u16 freq )
   {
   0:	b570      	push	{r4, r5, r6, lr}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:197
   /* Calculate the frequency (depend on the PCLK1 clock value) */
   CCR_Val = (RCC_ClockFreq.PCLK1_Frequency / freq);
   2:	f240 0300 	movw	r3, #0
   6:	f2c0 0300 	movt	r3, #0
   a:	689b      	ldr	r3, [r3, #8]
   c:	fbb3 f3f0 	udiv	r3, r3, r0
  10:	b29b      	uxth	r3, r3
  12:	f240 0600 	movw	r6, #0
  16:	f2c0 0600 	movt	r6, #0
  1a:	8033      	strh	r3, [r6, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:199

   TIM_TimeBaseStructure.TIM_Period          = CCR_Val * 2;
  1c:	f240 0400 	movw	r4, #0
  20:	f2c0 0400 	movt	r4, #0
  24:	ea4f 0343 	mov.w	r3, r3, lsl #1
  28:	80a3      	strh	r3, [r4, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:200
   TIM_TimeBaseStructure.TIM_Prescaler       = 0x0;
  2a:	f04f 0300 	mov.w	r3, #0
  2e:	8023      	strh	r3, [r4, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:201
   TIM_TimeBaseStructure.TIM_ClockDivision   = 0x0;
  30:	80e3      	strh	r3, [r4, #6]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:202
   TIM_TimeBaseStructure.TIM_CounterMode     = TIM_CounterMode_Up;
  32:	8063      	strh	r3, [r4, #2]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:204

   TIM_TimeBaseInit( TIM3, &TIM_TimeBaseStructure );
  34:	f44f 6580 	mov.w	r5, #1024	; 0x400
  38:	f2c4 0500 	movt	r5, #16384	; 0x4000
  3c:	4628      	mov	r0, r5
  3e:	4621      	mov	r1, r4
  40:	f7ff fffe 	bl	0 <TIM_TimeBaseInit>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:207

   /* Output Compare Toggle Mode configuration: Channel3 */
   TIM_OCInitStructure.TIM_OCMode   = TIM_OCMode_PWM1;
  44:	f04f 0360 	mov.w	r3, #96	; 0x60
  48:	81a3      	strh	r3, [r4, #12]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:208
   TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  4a:	f04f 0301 	mov.w	r3, #1
  4e:	81e3      	strh	r3, [r4, #14]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:209
   TIM_OCInitStructure.TIM_Pulse    = CCR_Val;
  50:	8836      	ldrh	r6, [r6, #0]
  52:	8266      	strh	r6, [r4, #18]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:211

   TIM_OC3Init( TIM3, &TIM_OCInitStructure );
  54:	4628      	mov	r0, r5
  56:	f104 010c 	add.w	r1, r4, #12
  5a:	f7ff fffe 	bl	0 <TIM_OC3Init>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:212
   TIM_OC3PreloadConfig( TIM3, TIM_OCPreload_Enable );
  5e:	4628      	mov	r0, r5
  60:	f04f 0108 	mov.w	r1, #8
  64:	f7ff fffe 	bl	0 <TIM_OC3PreloadConfig>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:213
   }
  68:	bd70      	pop	{r4, r5, r6, pc}
  6a:	bf00      	nop

Disassembly of section .text.BUZZER_Init:

00000000 <BUZZER_Init>:
BUZZER_Init():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:231
*  @attention  This function must <b>NOT</b> be called by the user.
*
**/
/******************************************************************************/
void BUZZER_Init( void )
   {
   0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   4:	b082      	sub	sp, #8
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:235
   GPIO_InitTypeDef GPIO_InitStructure;

   /* Enable GPIOB clock  */
   RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOB, ENABLE );
   6:	f04f 0008 	mov.w	r0, #8
   a:	f04f 0101 	mov.w	r1, #1
   e:	f7ff fffe 	bl	0 <RCC_APB2PeriphClockCmd>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:238

   /* GPIOB Configuration: TIM3 3in Output */
   GPIO_InitStructure.GPIO_Pin   = GPIO_Pin_0;
  12:	f04f 0801 	mov.w	r8, #1
  16:	f8ad 8004 	strh.w	r8, [sp, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:239
   GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF_PP;
  1a:	f04f 0318 	mov.w	r3, #24
  1e:	f88d 3007 	strb.w	r3, [sp, #7]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:240
   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  22:	f04f 0303 	mov.w	r3, #3
  26:	f88d 3006 	strb.w	r3, [sp, #6]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:242

   GPIO_Init( GPIOB, &GPIO_InitStructure );
  2a:	f44f 6040 	mov.w	r0, #3072	; 0xc00
  2e:	f2c4 0001 	movt	r0, #16385	; 0x4001
  32:	a901      	add	r1, sp, #4
  34:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:249
   /* TIM3 Configuration ------------------------------------------------------*/
   /* TIM3CLK = 18 MHz, Prescaler = 0x0, TIM3 counter clock = 18  MHz */
   /* CC update rate = TIM3 counter clock / (2* CCR_Val) ~= 750 Hz */

   /* Enable TIM3 clock */
   RCC_APB1PeriphClockCmd( RCC_APB1Periph_TIM3, ENABLE );
  38:	f04f 0002 	mov.w	r0, #2
  3c:	4641      	mov	r1, r8
  3e:	f7ff fffe 	bl	0 <RCC_APB1PeriphClockCmd>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:250
   TIM_DeInit( TIM3 );
  42:	f44f 6680 	mov.w	r6, #1024	; 0x400
  46:	f2c4 0600 	movt	r6, #16384	; 0x4000
  4a:	4630      	mov	r0, r6
  4c:	f7ff fffe 	bl	0 <TIM_DeInit>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:251
   TIM_TimeBaseStructInit( &TIM_TimeBaseStructure );
  50:	f240 0400 	movw	r4, #0
  54:	f2c0 0400 	movt	r4, #0
  58:	4620      	mov	r0, r4
  5a:	f7ff fffe 	bl	0 <TIM_TimeBaseStructInit>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:252
   TIM_OCStructInit( &TIM_OCInitStructure );
  5e:	f104 090c 	add.w	r9, r4, #12
  62:	4648      	mov	r0, r9
  64:	f7ff fffe 	bl	0 <TIM_OCStructInit>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:255

   /* Time base configuration */
   TIM_TimeBaseStructure.TIM_Period          = 0xFFFF;
  68:	f04f 33ff 	mov.w	r3, #4294967295
  6c:	80a3      	strh	r3, [r4, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:256
   TIM_TimeBaseStructure.TIM_Prescaler       = 0x0;
  6e:	f04f 0700 	mov.w	r7, #0
  72:	46ba      	mov	sl, r7
  74:	8027      	strh	r7, [r4, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:257
   TIM_TimeBaseStructure.TIM_ClockDivision   = 0x0;
  76:	80e7      	strh	r7, [r4, #6]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:258
   TIM_TimeBaseStructure.TIM_CounterMode     = TIM_CounterMode_Up;
  78:	8067      	strh	r7, [r4, #2]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:260

   TIM_TimeBaseInit( TIM3, &TIM_TimeBaseStructure );
  7a:	4630      	mov	r0, r6
  7c:	4621      	mov	r1, r4
  7e:	f7ff fffe 	bl	0 <TIM_TimeBaseInit>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:263

   /* Output Compare Toggle Mode configuration: Channel3 */
   TIM_OCInitStructure.TIM_OCMode   = TIM_OCMode_Toggle;
  82:	f04f 0330 	mov.w	r3, #48	; 0x30
  86:	81a3      	strh	r3, [r4, #12]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:264
   TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  88:	f8a4 800e 	strh.w	r8, [r4, #14]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:265
   TIM_OCInitStructure.TIM_Pulse    = CCR_Val;
  8c:	f240 0500 	movw	r5, #0
  90:	f2c0 0500 	movt	r5, #0
  94:	882b      	ldrh	r3, [r5, #0]
  96:	8263      	strh	r3, [r4, #18]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:267

   TIM_OC3Init( TIM3, &TIM_OCInitStructure );
  98:	4630      	mov	r0, r6
  9a:	4649      	mov	r1, r9
  9c:	f7ff fffe 	bl	0 <TIM_OC3Init>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:268
   TIM_OC3PreloadConfig( TIM3, TIM_OCPreload_Disable );
  a0:	4630      	mov	r0, r6
  a2:	4639      	mov	r1, r7
  a4:	f7ff fffe 	bl	0 <TIM_OC3PreloadConfig>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:269
   BUZZER_SetFrequency( 440 );
  a8:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
  ac:	f7ff fffe 	bl	0 <BUZZER_Init>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:272

   /* Enable TIM3 IT */
   TIM_ITConfig( TIM3, TIM_IT_CC3, ENABLE );
  b0:	4630      	mov	r0, r6
  b2:	f04f 0108 	mov.w	r1, #8
  b6:	4642      	mov	r2, r8
  b8:	f7ff fffe 	bl	0 <TIM_ITConfig>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:274

   Buzzer_Mode  = BUZZER_OFF;
  bc:	70af      	strb	r7, [r5, #2]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:275
   }
  be:	b002      	add	sp, #8
  c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

Disassembly of section .text.BUZZER_GetMode:

00000000 <BUZZER_GetMode>:
BUZZER_GetMode():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:358
*  @return  Current buzzer mode.
*
**/
/******************************************************************************/
enum BUZZER_mode BUZZER_GetMode( void )
   {
   0:	f240 0300 	movw	r3, #0
   4:	f2c0 0300 	movt	r3, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:360
   return Buzzer_Mode;
   }
   8:	f993 0002 	ldrsb.w	r0, [r3, #2]
   c:	4770      	bx	lr
   e:	bf00      	nop

Disassembly of section .text.BUZZER_SetMode:

00000000 <BUZZER_SetMode>:
BUZZER_SetMode():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:376
*  @param[in]  mode  New buzzer mode.
*
**/
/******************************************************************************/
void BUZZER_SetMode( enum BUZZER_mode mode )
   {
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:377
   Buzzer_Mode    = mode;
   2:	f240 0300 	movw	r3, #0
   6:	f2c0 0300 	movt	r3, #0
   a:	7098      	strb	r0, [r3, #2]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:378
   Buzzer_Counter = 0;
   c:	f240 0300 	movw	r3, #0
  10:	f2c0 0300 	movt	r3, #0
  14:	f04f 0200 	mov.w	r2, #0
  18:	61da      	str	r2, [r3, #28]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:380

   switch ( mode )
  1a:	2804      	cmp	r0, #4
  1c:	d817      	bhi.n	4e <BUZZER_SetMode+0x4e>
  1e:	e8df f000 	tbb	[pc, r0]
  22:	050e      	.short	0x050e
  24:	0505      	.short	0x0505
  26:	03          	.byte	0x03
  27:	00          	.byte	0x00
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:383
      {
      case BUZZER_PLAYMUSIC   :
         PlayMusic(); //start melody
  28:	f7ff fffe 	bl	0 <BUZZER_SetMode>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:389
         /* no break */

      case BUZZER_LONGBEEP    :
      case BUZZER_SHORTBEEP   :
      case BUZZER_ON          :
         TIM_Cmd( TIM3, ENABLE );
  2c:	f44f 6080 	mov.w	r0, #1024	; 0x400
  30:	f2c4 0000 	movt	r0, #16384	; 0x4000
  34:	f04f 0101 	mov.w	r1, #1
  38:	f7ff fffe 	bl	0 <TIM_Cmd>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:390
         break;
  3c:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:393

      case BUZZER_OFF         :
         TIM_Cmd( TIM3, DISABLE );
  3e:	f44f 6080 	mov.w	r0, #1024	; 0x400
  42:	f2c4 0000 	movt	r0, #16384	; 0x4000
  46:	f04f 0100 	mov.w	r1, #0
  4a:	f7ff fffe 	bl	0 <TIM_Cmd>
  4e:	bd08      	pop	{r3, pc}

Disassembly of section .text.PlayMusic:

00000000 <PlayMusic>:
PlayMusic():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:104
*  Play the next note of the current melody.
*
**/
/******************************************************************************/
static void PlayMusic( void )
   {
   0:	b510      	push	{r4, lr}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:105
   u8 duration = DefaultDuration;
   2:	f240 0300 	movw	r3, #0
   6:	f2c0 0300 	movt	r3, #0
   a:	78dc      	ldrb	r4, [r3, #3]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:109
   u8 c;

   // Discard blank characters
   while ( *CurrentMelody == ' ')
   c:	f240 0300 	movw	r3, #0
  10:	f2c0 0300 	movt	r3, #0
  14:	6a19      	ldr	r1, [r3, #32]
  16:	780a      	ldrb	r2, [r1, #0]
  18:	2a20      	cmp	r2, #32
  1a:	d10b      	bne.n	34 <PlayMusic+0x34>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:103
*
*  Play the next note of the current melody.
*
**/
/******************************************************************************/
static void PlayMusic( void )
  1c:	f101 0301 	add.w	r3, r1, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:111
   u8 c;

   // Discard blank characters
   while ( *CurrentMelody == ' ')
      {
      CurrentMelody++;
  20:	f240 0000 	movw	r0, #0
  24:	f2c0 0000 	movt	r0, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:109
   {
   u8 duration = DefaultDuration;
   u8 c;

   // Discard blank characters
   while ( *CurrentMelody == ' ')
  28:	4619      	mov	r1, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:111
      {
      CurrentMelody++;
  2a:	6203      	str	r3, [r0, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:109
   {
   u8 duration = DefaultDuration;
   u8 c;

   // Discard blank characters
   while ( *CurrentMelody == ' ')
  2c:	f813 2b01 	ldrb.w	r2, [r3], #1
  30:	2a20      	cmp	r2, #32
  32:	d0f9      	beq.n	28 <PlayMusic+0x28>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:115
      {
      CurrentMelody++;
      }

   // Check whether a duration is present.
   if ( (*CurrentMelody > '0') && (*CurrentMelody < '9') )
  34:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
  38:	b2db      	uxtb	r3, r3
  3a:	2b07      	cmp	r3, #7
  3c:	d81e      	bhi.n	7c <PlayMusic+0x7c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:117
      {
      duration = *CurrentMelody++ - '0';
  3e:	f1a2 0230 	sub.w	r2, r2, #48	; 0x30
  42:	b2d4      	uxtb	r4, r2
  44:	f101 0201 	add.w	r2, r1, #1
  48:	f240 0300 	movw	r3, #0
  4c:	f2c0 0300 	movt	r3, #0
  50:	621a      	str	r2, [r3, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:119

      if ( (*CurrentMelody > '0') && (*CurrentMelody < '9') )
  52:	784b      	ldrb	r3, [r1, #1]
  54:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
  58:	b2c9      	uxtb	r1, r1
  5a:	2907      	cmp	r1, #7
  5c:	d80e      	bhi.n	7c <PlayMusic+0x7c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:121
         {
         duration *= 10;
  5e:	eb04 0484 	add.w	r4, r4, r4, lsl #2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:122
         duration += (*CurrentMelody++ - '0');
  62:	eb03 0444 	add.w	r4, r3, r4, lsl #1
  66:	f1a4 0430 	sub.w	r4, r4, #48	; 0x30
  6a:	f004 04ff 	and.w	r4, r4, #255	; 0xff
  6e:	f240 0300 	movw	r3, #0
  72:	f2c0 0300 	movt	r3, #0
  76:	f102 0201 	add.w	r2, r2, #1
  7a:	621a      	str	r2, [r3, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:127
         }
      }

   Buzzer_Counter = ( (32/duration) * 256L * 32L) / DefaultBeats;
   Buzzer_Counter*= (RCC_ClockFreq.SYSCLK_Frequency / 12000000L); //Adapt to HCLK1
  7c:	f240 0300 	movw	r3, #0
  80:	f2c0 0300 	movt	r3, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:126
         duration *= 10;
         duration += (*CurrentMelody++ - '0');
         }
      }

   Buzzer_Counter = ( (32/duration) * 256L * 32L) / DefaultBeats;
  84:	f04f 0220 	mov.w	r2, #32
  88:	fb92 f4f4 	sdiv	r4, r2, r4
  8c:	ea4f 3444 	mov.w	r4, r4, lsl #13
  90:	f240 0200 	movw	r2, #0
  94:	f2c0 0200 	movt	r2, #0
  98:	8892      	ldrh	r2, [r2, #4]
  9a:	fb94 f4f2 	sdiv	r4, r4, r2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:127
   Buzzer_Counter*= (RCC_ClockFreq.SYSCLK_Frequency / 12000000L); //Adapt to HCLK1
  9e:	f240 0200 	movw	r2, #0
  a2:	f2c0 0200 	movt	r2, #0
  a6:	6811      	ldr	r1, [r2, #0]
  a8:	f649 7281 	movw	r2, #40833	; 0x9f81
  ac:	f2c1 625e 	movt	r2, #5726	; 0x165e
  b0:	fba2 0201 	umull	r0, r2, r2, r1
  b4:	ea4f 5212 	mov.w	r2, r2, lsr #20
  b8:	fb02 f204 	mul.w	r2, r2, r4
  bc:	61da      	str	r2, [r3, #28]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:130

   //read the note
   c = *CurrentMelody++;
  be:	6a18      	ldr	r0, [r3, #32]
  c0:	4601      	mov	r1, r0
  c2:	f811 2b01 	ldrb.w	r2, [r1], #1
  c6:	6219      	str	r1, [r3, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:132

   if ( (c >= 'a') && (c <= 'z') )
  c8:	f1a2 0361 	sub.w	r3, r2, #97	; 0x61
  cc:	b2db      	uxtb	r3, r3
  ce:	2b19      	cmp	r3, #25
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:134
      {
      c+=('A'-'a');
  d0:	bf9c      	itt	ls
  d2:	3a20      	subls	r2, #32
  d4:	b2d2      	uxtbls	r2, r2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:137
      }

   if ( c == 'P' )
  d6:	2a50      	cmp	r2, #80	; 0x50
  d8:	d107      	bne.n	ea <PlayMusic+0xea>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:139
      {
      note = NOTE_PAUSE;
  da:	f240 0300 	movw	r3, #0
  de:	f2c0 0300 	movt	r3, #0
  e2:	f04f 0200 	mov.w	r2, #0
  e6:	701a      	strb	r2, [r3, #0]
  e8:	e01d      	b.n	126 <PlayMusic+0x126>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:141
      }
   else if ( (c >= 'A') && (c <= 'G') )
  ea:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
  ee:	b2db      	uxtb	r3, r3
  f0:	2b06      	cmp	r3, #6
  f2:	d818      	bhi.n	126 <PlayMusic+0x126>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:143
      {
      note = (c - 'A') + NOTE_LA;
  f4:	f1a2 0240 	sub.w	r2, r2, #64	; 0x40
  f8:	b2d2      	uxtb	r2, r2
  fa:	f240 0300 	movw	r3, #0
  fe:	f2c0 0300 	movt	r3, #0
 102:	701a      	strb	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:145

      if ( *CurrentMelody == '#' )
 104:	7843      	ldrb	r3, [r0, #1]
 106:	2b23      	cmp	r3, #35	; 0x23
 108:	d10d      	bne.n	126 <PlayMusic+0x126>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:147
         {
         note|=0x8;
 10a:	f240 0300 	movw	r3, #0
 10e:	f2c0 0300 	movt	r3, #0
 112:	f042 0208 	orr.w	r2, r2, #8
 116:	701a      	strb	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:148
         CurrentMelody++;
 118:	f240 0300 	movw	r3, #0
 11c:	f2c0 0300 	movt	r3, #0
 120:	f101 0101 	add.w	r1, r1, #1
 124:	6219      	str	r1, [r3, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:152
         }
      }

   octave = DefaultOctave;
 126:	f240 0300 	movw	r3, #0
 12a:	f2c0 0300 	movt	r3, #0
 12e:	f240 0200 	movw	r2, #0
 132:	f2c0 0200 	movt	r2, #0
 136:	7992      	ldrb	r2, [r2, #6]
 138:	701a      	strb	r2, [r3, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:153
   c = *CurrentMelody;
 13a:	f240 0300 	movw	r3, #0
 13e:	f2c0 0300 	movt	r3, #0
 142:	6a1b      	ldr	r3, [r3, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:155

   if ( (c>= '5') && (c<= '8') )
 144:	781a      	ldrb	r2, [r3, #0]
 146:	f1a2 0235 	sub.w	r2, r2, #53	; 0x35
 14a:	b2d2      	uxtb	r2, r2
 14c:	2a03      	cmp	r2, #3
 14e:	d80b      	bhi.n	168 <PlayMusic+0x168>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:157
      {
      octave = OCT_440 + (c-'5');
 150:	f240 0100 	movw	r1, #0
 154:	f2c0 0100 	movt	r1, #0
 158:	700a      	strb	r2, [r1, #0]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:158
      CurrentMelody++;
 15a:	f240 0200 	movw	r2, #0
 15e:	f2c0 0200 	movt	r2, #0
 162:	f103 0301 	add.w	r3, r3, #1
 166:	6213      	str	r3, [r2, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:161
      }

   BUZZER_SetFrequency ( (Note_Freq [ note ] * (1<<octave)));
 168:	f240 0300 	movw	r3, #0
 16c:	f2c0 0300 	movt	r3, #0
 170:	f240 0200 	movw	r2, #0
 174:	f2c0 0200 	movt	r2, #0
 178:	7812      	ldrb	r2, [r2, #0]
 17a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 17e:	8918      	ldrh	r0, [r3, #8]
 180:	f240 0300 	movw	r3, #0
 184:	f2c0 0300 	movt	r3, #0
 188:	781b      	ldrb	r3, [r3, #0]
 18a:	fa00 f003 	lsl.w	r0, r0, r3
 18e:	b280      	uxth	r0, r0
 190:	f7ff fffe 	bl	0 <PlayMusic>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:164

   //discard delimiter and ignore special duration
   while ( (c = *CurrentMelody++) != 0 )
 194:	f240 0100 	movw	r1, #0
 198:	f2c0 0100 	movt	r1, #0
 19c:	e001      	b.n	1a2 <PlayMusic+0x1a2>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:166
      {
      if ( c==',')
 19e:	2a2c      	cmp	r2, #44	; 0x2c
 1a0:	d006      	beq.n	1b0 <PlayMusic+0x1b0>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:164
      }

   BUZZER_SetFrequency ( (Note_Freq [ note ] * (1<<octave)));

   //discard delimiter and ignore special duration
   while ( (c = *CurrentMelody++) != 0 )
 1a2:	6a08      	ldr	r0, [r1, #32]
 1a4:	4603      	mov	r3, r0
 1a6:	f813 2b01 	ldrb.w	r2, [r3], #1
 1aa:	620b      	str	r3, [r1, #32]
 1ac:	2a00      	cmp	r2, #0
 1ae:	d1f6      	bne.n	19e <PlayMusic+0x19e>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:170
      {
      if ( c==',')
         break;
      }

   if ( *(CurrentMelody-1)==0 )
 1b0:	7803      	ldrb	r3, [r0, #0]
 1b2:	b933      	cbnz	r3, 1c2 <PlayMusic+0x1c2>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:172
      {
      CurrentMelody  = 0;
 1b4:	f240 0300 	movw	r3, #0
 1b8:	f2c0 0300 	movt	r3, #0
 1bc:	f04f 0100 	mov.w	r1, #0
 1c0:	6219      	str	r1, [r3, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:175
      }

   if ( c == 0 )
 1c2:	b91a      	cbnz	r2, 1cc <PlayMusic+0x1cc>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:177
      {
      BUZZER_SetMode ( BUZZER_OFF );
 1c4:	f04f 0000 	mov.w	r0, #0
 1c8:	f7ff fffe 	bl	0 <PlayMusic>
 1cc:	bd10      	pop	{r4, pc}
 1ce:	bf00      	nop

Disassembly of section .text.BUZZER_Handler:

00000000 <BUZZER_Handler>:
BUZZER_Handler():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:291
*  @attention  This function must <b>NOT</b> be called by the user.
*
**/
/******************************************************************************/
void BUZZER_Handler( void )
   {
   0:	b508      	push	{r3, lr}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:294
   int fSetOFF = 0;

   if ( Buzzer_Mode == BUZZER_PLAYMUSIC )
   2:	f240 0300 	movw	r3, #0
   6:	f2c0 0300 	movt	r3, #0
   a:	789b      	ldrb	r3, [r3, #2]
   c:	b25a      	sxtb	r2, r3
   e:	2a04      	cmp	r2, #4
  10:	d110      	bne.n	34 <BUZZER_Handler+0x34>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:296
      {
      if ( Buzzer_Counter == 0 )
  12:	f240 0300 	movw	r3, #0
  16:	f2c0 0300 	movt	r3, #0
  1a:	69da      	ldr	r2, [r3, #28]
  1c:	b912      	cbnz	r2, 24 <BUZZER_Handler+0x24>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:298
         {
         PlayMusic();
  1e:	f7ff fffe 	bl	0 <BUZZER_Handler>
  22:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:302
         }
      else 
         {
         Buzzer_Counter--;
  24:	f240 0300 	movw	r3, #0
  28:	f2c0 0300 	movt	r3, #0
  2c:	f102 32ff 	add.w	r2, r2, #4294967295
  30:	61da      	str	r2, [r3, #28]
  32:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:307
         }

      return;
      }
   else if ( Buzzer_Mode == BUZZER_SHORTBEEP )
  34:	b25a      	sxtb	r2, r3
  36:	2a02      	cmp	r2, #2
  38:	d114      	bne.n	64 <BUZZER_Handler+0x64>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:309
      {
      if ( Buzzer_Counter++ == (BUZZER_SHORTBEEP_DURATION) ) 
  3a:	f240 0300 	movw	r3, #0
  3e:	f2c0 0300 	movt	r3, #0
  42:	69da      	ldr	r2, [r3, #28]
  44:	f102 0101 	add.w	r1, r2, #1
  48:	61d9      	str	r1, [r3, #28]
  4a:	2a64      	cmp	r2, #100	; 0x64
  4c:	d107      	bne.n	5e <BUZZER_Handler+0x5e>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:311
         {
         Buzzer_Mode  = BUZZER_OFF;
  4e:	f240 0300 	movw	r3, #0
  52:	f2c0 0300 	movt	r3, #0
  56:	f04f 0200 	mov.w	r2, #0
  5a:	709a      	strb	r2, [r3, #2]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:313

         return;
  5c:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:315
         }
      if ( Buzzer_Counter == (BUZZER_SHORTBEEP_DURATION/2) )
  5e:	2932      	cmp	r1, #50	; 0x32
  60:	d121      	bne.n	a6 <BUZZER_Handler+0xa6>
  62:	e018      	b.n	96 <BUZZER_Handler+0x96>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:320
         {
         fSetOFF = 1;
         }
      }
   else if ( Buzzer_Mode == BUZZER_LONGBEEP )
  64:	b25b      	sxtb	r3, r3
  66:	2b03      	cmp	r3, #3
  68:	d11d      	bne.n	a6 <BUZZER_Handler+0xa6>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:322
      {
      if ( Buzzer_Counter++ == (BUZZER_LONGBEEP_DURATION) )
  6a:	f240 0300 	movw	r3, #0
  6e:	f2c0 0300 	movt	r3, #0
  72:	69da      	ldr	r2, [r3, #28]
  74:	f102 0101 	add.w	r1, r2, #1
  78:	61d9      	str	r1, [r3, #28]
  7a:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
  7e:	d107      	bne.n	12 <BUZZER_Handler+0x12>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:324
         {
         Buzzer_Mode  = BUZZER_OFF;
  80:	f240 0300 	movw	r3, #0
  84:	f2c0 0300 	movt	r3, #0
  88:	f04f 0200 	mov.w	r2, #0
  8c:	709a      	strb	r2, [r3, #2]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:326

         return;
  8e:	bd08      	pop	{r3, pc}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:328
         }
      if ( Buzzer_Counter > (BUZZER_LONGBEEP_DURATION/2) )
  90:	f5b1 7ffa 	cmp.w	r1, #500	; 0x1f4
  94:	d907      	bls.n	a6 <BUZZER_Handler+0xa6>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:336
         }
      }

   if ( fSetOFF == 1 )
      {
      TIM_Cmd(TIM3, DISABLE);
  96:	f44f 6080 	mov.w	r0, #1024	; 0x400
  9a:	f2c4 0000 	movt	r0, #16384	; 0x4000
  9e:	f04f 0100 	mov.w	r1, #0
  a2:	f7ff fffe 	bl	0 <TIM_Cmd>
  a6:	bd08      	pop	{r3, pc}

Disassembly of section .text.BUZZER_PlayMusic:

00000000 <BUZZER_PlayMusic>:
BUZZER_PlayMusic():
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:464
*  @param[in]  melody New melody to play on buzzer.
*
**/
/******************************************************************************/
void BUZZER_PlayMusic (const u8 *melody )
   {
   0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:469
   u8    c;
   u8    default_id  = 0;
   u16   default_val = 0;

   DefaultOctave      = OCT_880;  // Default for the default Octave.
   4:	f240 0300 	movw	r3, #0
   8:	f2c0 0300 	movt	r3, #0
   c:	f04f 0201 	mov.w	r2, #1
  10:	719a      	strb	r2, [r3, #6]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:470
   DefaultDuration    = 4;        // Default for the default Duration.
  12:	f04f 0204 	mov.w	r2, #4
  16:	70da      	strb	r2, [r3, #3]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:471
   DefaultBeats       = 63;
  18:	f04f 023f 	mov.w	r2, #63	; 0x3f
  1c:	809a      	strh	r2, [r3, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:472
   CurrentMelody      = melody;
  1e:	f240 0300 	movw	r3, #0
  22:	f2c0 0300 	movt	r3, #0
  26:	6218      	str	r0, [r3, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:473
   CurrentMelodySTART = melody;
  28:	6258      	str	r0, [r3, #36]	; 0x24
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:475

   while( *CurrentMelody != RTTTL_SEP )
  2a:	7803      	ldrb	r3, [r0, #0]
  2c:	2b3a      	cmp	r3, #58	; 0x3a
  2e:	d012      	beq.n	56 <BUZZER_PlayMusic+0x56>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:477
      {
      if( *CurrentMelody == 0 ) 
  30:	2b00      	cmp	r3, #0
  32:	f000 808e 	beq.w	152 <BUZZER_PlayMusic+0x152>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:463
*
*  @param[in]  melody New melody to play on buzzer.
*
**/
/******************************************************************************/
void BUZZER_PlayMusic (const u8 *melody )
  36:	f100 0301 	add.w	r3, r0, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:483
         {
         return;
         }

      // Discard the melody name.
      CurrentMelody++; 
  3a:	f240 0100 	movw	r1, #0
  3e:	f2c0 0100 	movt	r1, #0
  42:	e002      	b.n	4a <BUZZER_PlayMusic+0x4a>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:477
   CurrentMelody      = melody;
   CurrentMelodySTART = melody;

   while( *CurrentMelody != RTTTL_SEP )
      {
      if( *CurrentMelody == 0 ) 
  44:	2a00      	cmp	r2, #0
  46:	f000 8084 	beq.w	152 <BUZZER_PlayMusic+0x152>
  4a:	4618      	mov	r0, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:483
         {
         return;
         }

      // Discard the melody name.
      CurrentMelody++; 
  4c:	620b      	str	r3, [r1, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:475
   DefaultDuration    = 4;        // Default for the default Duration.
   DefaultBeats       = 63;
   CurrentMelody      = melody;
   CurrentMelodySTART = melody;

   while( *CurrentMelody != RTTTL_SEP )
  4e:	f813 2b01 	ldrb.w	r2, [r3], #1
  52:	2a3a      	cmp	r2, #58	; 0x3a
  54:	d1f6      	bne.n	44 <BUZZER_PlayMusic+0x44>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:487
      // Discard the melody name.
      CurrentMelody++; 
      }

   // Now read the defaults if any.
   for( ++CurrentMelody; *CurrentMelody != RTTTL_SEP; CurrentMelody++ )
  56:	f100 0201 	add.w	r2, r0, #1
  5a:	f240 0300 	movw	r3, #0
  5e:	f2c0 0300 	movt	r3, #0
  62:	621a      	str	r2, [r3, #32]
  64:	7843      	ldrb	r3, [r0, #1]
  66:	2b3a      	cmp	r3, #58	; 0x3a
  68:	d06f      	beq.n	14a <BUZZER_PlayMusic+0x14a>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:489
      {
      if( *CurrentMelody == 0 ) 
  6a:	2b00      	cmp	r3, #0
  6c:	d071      	beq.n	152 <BUZZER_PlayMusic+0x152>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:467
/******************************************************************************/
void BUZZER_PlayMusic (const u8 *melody )
   {
   u8    c;
   u8    default_id  = 0;
   u16   default_val = 0;
  6e:	f04f 0400 	mov.w	r4, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:466
**/
/******************************************************************************/
void BUZZER_PlayMusic (const u8 *melody )
   {
   u8    c;
   u8    default_id  = 0;
  72:	4625      	mov	r5, r4
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:495
         {
         return;
         }

      // Discard any blank.
      while ( *CurrentMelody == ' ' ) 
  74:	f240 0100 	movw	r1, #0
  78:	f2c0 0100 	movt	r1, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:548

            if ( ( DefaultBeats == 0 ) || ( DefaultBeats > 500 ) )
               DefaultBeats = 63;
            }

         default_val = 0;
  7c:	4627      	mov	r7, r4
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:549
         default_id  = 0;
  7e:	46a4      	mov	ip, r4
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:542
            if ( DefaultOctave > OCT_7040 )
               DefaultOctave = OCT_440;
            }
         else if ( default_id == 'B' )
            {
            DefaultBeats = default_val;
  80:	f240 0600 	movw	r6, #0
  84:	f2c0 0600 	movt	r6, #0
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:544

            if ( ( DefaultBeats == 0 ) || ( DefaultBeats > 500 ) )
  88:	f240 19f3 	movw	r9, #499	; 0x1f3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:545
               DefaultBeats = 63;
  8c:	f04f 083f 	mov.w	r8, #63	; 0x3f
  90:	e001      	b.n	96 <BUZZER_PlayMusic+0x96>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:489
      }

   // Now read the defaults if any.
   for( ++CurrentMelody; *CurrentMelody != RTTTL_SEP; CurrentMelody++ )
      {
      if( *CurrentMelody == 0 ) 
  92:	2b00      	cmp	r3, #0
  94:	d05d      	beq.n	152 <BUZZER_PlayMusic+0x152>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:495
         {
         return;
         }

      // Discard any blank.
      while ( *CurrentMelody == ' ' ) 
  96:	6a08      	ldr	r0, [r1, #32]
  98:	7802      	ldrb	r2, [r0, #0]
  9a:	2a20      	cmp	r2, #32
  9c:	d107      	bne.n	ae <BUZZER_PlayMusic+0xae>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:463
*
*  @param[in]  melody New melody to play on buzzer.
*
**/
/******************************************************************************/
void BUZZER_PlayMusic (const u8 *melody )
  9e:	f100 0301 	add.w	r3, r0, #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:495
         {
         return;
         }

      // Discard any blank.
      while ( *CurrentMelody == ' ' ) 
  a2:	4618      	mov	r0, r3
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:497
         {
         CurrentMelody++;
  a4:	620b      	str	r3, [r1, #32]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:495
         {
         return;
         }

      // Discard any blank.
      while ( *CurrentMelody == ' ' ) 
  a6:	f813 2b01 	ldrb.w	r2, [r3], #1
  aa:	2a20      	cmp	r2, #32
  ac:	d0f9      	beq.n	a2 <BUZZER_PlayMusic+0xa2>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:502
         CurrentMelody++;
         }

      c = *CurrentMelody;

      if ( c == RTTTL_SEP )
  ae:	2a3a      	cmp	r2, #58	; 0x3a
  b0:	d04b      	beq.n	14a <BUZZER_PlayMusic+0x14a>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:507
         {
         break;
         }

      if ( (c >= 'a') && (c <= 'z') )
  b2:	f1a2 0361 	sub.w	r3, r2, #97	; 0x61
  b6:	b2db      	uxtb	r3, r3
  b8:	2b19      	cmp	r3, #25
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:509
         {
         c+=('A'-'a');
  ba:	bf9c      	itt	ls
  bc:	3a20      	subls	r2, #32
  be:	b2d2      	uxtbls	r2, r2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:512
         }

      if ( (c >= 'A') && (c <= 'Z') )
  c0:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
  c4:	b2db      	uxtb	r3, r3
  c6:	2b19      	cmp	r3, #25
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:514
         {
         default_id = c;
  c8:	bf98      	it	ls
  ca:	4615      	movls	r5, r2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:512
      if ( (c >= 'a') && (c <= 'z') )
         {
         c+=('A'-'a');
         }

      if ( (c >= 'A') && (c <= 'Z') )
  cc:	d936      	bls.n	13c <BUZZER_PlayMusic+0x13c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:518
         {
         default_id = c;
         continue;
         }

      if ( (c >= '0') && (c <= '9') )
  ce:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
  d2:	b2db      	uxtb	r3, r3
  d4:	2b09      	cmp	r3, #9
  d6:	d831      	bhi.n	13c <BUZZER_PlayMusic+0x13c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:520
         {
         default_val *= 10;
  d8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  dc:	ea4f 0444 	mov.w	r4, r4, lsl #1
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:521
         default_val += (c-'0');
  e0:	f1a4 0430 	sub.w	r4, r4, #48	; 0x30
  e4:	18a2      	adds	r2, r4, r2
  e6:	b294      	uxth	r4, r2
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:524
         c = * (CurrentMelody + 1 );

         if ( (c >= '0') && (c <= '9') )
  e8:	7843      	ldrb	r3, [r0, #1]
  ea:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
  ee:	b2db      	uxtb	r3, r3
  f0:	2b09      	cmp	r3, #9
  f2:	d923      	bls.n	13c <BUZZER_PlayMusic+0x13c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:529
            {
            continue;
            }

         if ( default_id == 'D' )
  f4:	2d44      	cmp	r5, #68	; 0x44
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:531
            {
            DefaultDuration = default_val;
  f6:	bf02      	ittt	eq
  f8:	70f4      	strbeq	r4, [r6, #3]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:548

            if ( ( DefaultBeats == 0 ) || ( DefaultBeats > 500 ) )
               DefaultBeats = 63;
            }

         default_val = 0;
  fa:	463c      	moveq	r4, r7
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:549
         default_id  = 0;
  fc:	4665      	moveq	r5, ip
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:529
         if ( (c >= '0') && (c <= '9') )
            {
            continue;
            }

         if ( default_id == 'D' )
  fe:	d01d      	beq.n	13c <BUZZER_PlayMusic+0x13c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:533
            {
            DefaultDuration = default_val;
            }
         else if ( default_id == 'O' )
 100:	2d4f      	cmp	r5, #79	; 0x4f
 102:	d10c      	bne.n	11e <BUZZER_PlayMusic+0x11e>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:535
            {
            DefaultOctave = default_val - 5;
 104:	f1a4 0305 	sub.w	r3, r4, #5
 108:	b2db      	uxtb	r3, r3
 10a:	71b3      	strb	r3, [r6, #6]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:537

            if ( DefaultOctave > OCT_7040 )
 10c:	2b04      	cmp	r3, #4
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:548

            if ( ( DefaultBeats == 0 ) || ( DefaultBeats > 500 ) )
               DefaultBeats = 63;
            }

         default_val = 0;
 10e:	bf9c      	itt	ls
 110:	463c      	movls	r4, r7
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:549
         default_id  = 0;
 112:	4665      	movls	r5, ip
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:537
            }
         else if ( default_id == 'O' )
            {
            DefaultOctave = default_val - 5;

            if ( DefaultOctave > OCT_7040 )
 114:	d912      	bls.n	13c <BUZZER_PlayMusic+0x13c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:538
               DefaultOctave = OCT_440;
 116:	71b7      	strb	r7, [r6, #6]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:548

            if ( ( DefaultBeats == 0 ) || ( DefaultBeats > 500 ) )
               DefaultBeats = 63;
            }

         default_val = 0;
 118:	4664      	mov	r4, ip
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:549
         default_id  = 0;
 11a:	4665      	mov	r5, ip
 11c:	e00e      	b.n	13c <BUZZER_PlayMusic+0x13c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:540
            DefaultOctave = default_val - 5;

            if ( DefaultOctave > OCT_7040 )
               DefaultOctave = OCT_440;
            }
         else if ( default_id == 'B' )
 11e:	2d42      	cmp	r5, #66	; 0x42
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:548

            if ( ( DefaultBeats == 0 ) || ( DefaultBeats > 500 ) )
               DefaultBeats = 63;
            }

         default_val = 0;
 120:	bf1c      	itt	ne
 122:	463c      	movne	r4, r7
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:549
         default_id  = 0;
 124:	4665      	movne	r5, ip
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:540
            DefaultOctave = default_val - 5;

            if ( DefaultOctave > OCT_7040 )
               DefaultOctave = OCT_440;
            }
         else if ( default_id == 'B' )
 126:	d109      	bne.n	13c <BUZZER_PlayMusic+0x13c>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:542
            {
            DefaultBeats = default_val;
 128:	80b4      	strh	r4, [r6, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:544

            if ( ( DefaultBeats == 0 ) || ( DefaultBeats > 500 ) )
 12a:	f104 33ff 	add.w	r3, r4, #4294967295
 12e:	b29b      	uxth	r3, r3
 130:	454b      	cmp	r3, r9
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:545
               DefaultBeats = 63;
 132:	bf88      	it	hi
 134:	f8a6 8004 	strhhi.w	r8, [r6, #4]
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:548
            }

         default_val = 0;
 138:	463c      	mov	r4, r7
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:549
         default_id  = 0;
 13a:	4665      	mov	r5, ip
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:487
      // Discard the melody name.
      CurrentMelody++; 
      }

   // Now read the defaults if any.
   for( ++CurrentMelody; *CurrentMelody != RTTTL_SEP; CurrentMelody++ )
 13c:	6a0b      	ldr	r3, [r1, #32]
 13e:	f103 0201 	add.w	r2, r3, #1
 142:	620a      	str	r2, [r1, #32]
 144:	785b      	ldrb	r3, [r3, #1]
 146:	2b3a      	cmp	r3, #58	; 0x3a
 148:	d1a3      	bne.n	92 <BUZZER_PlayMusic+0x92>
C:\Users\fv\Desktop\STM32_LAMEC_CAN\TAMA\SPI\library\src/buzzer.c:553
         default_val = 0;
         default_id  = 0;
         }
      }

   BUZZER_SetMode( BUZZER_PLAYMUSIC );
 14a:	f04f 0004 	mov.w	r0, #4
 14e:	f7ff fffe 	bl	0 <BUZZER_PlayMusic>
 152:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 156:	bf00      	nop
